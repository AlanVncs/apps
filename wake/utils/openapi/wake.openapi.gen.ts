// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// To generate this file: deno run -A scripts/openAPI.ts

export interface API {
  /** @description Últimos Pedidos */
  "GET /dashboard/pedidos": {};
  /** @description Lista de hotsites vinculados ao banner */
  "GET /banners/:bannerId/hotsites": {};
  /** @description Vincula hotsites com um banner específico */
  "POST /banners/:bannerId/hotsites": {
    searchParams: {
      /**
       * lista de identificadores de hotsites a serem vinculados ao banner
       */
      RAW_BODY?: {
        /**
         * Id do hotsite (optional)
         */
        hotSiteId?: number;
      }[];
    };
  };
  /** @description Atualiza a exibição do banner nos hotsites, se deve ser em todos ou não */
  "PUT /banners/:bannerId/hotsites": {
    searchParams: {
      /**
       * Exibição do banner nos hotsites
       */
      exibirEmTodosHotsites?: boolean;
    };
  };
  /** @description Deleta o vinculo de um ou mais hotsites com um banner específico */
  "DELETE /banners/:bannerId/hotsites": {
    searchParams: {
      /**
       * Lista de identificadores de hotsites para desvincular do banner (optional)
       */
      listaHotsites?: {
        /**
         * Id do hotsite para vinculo com banner
         */
        hotSiteId?: {
          /**
           * Id do hotsite para vinculo com banner
           */
          hotSiteId?: unknown[];
        }[];
      };
    };
  };
  /** @description Retorna se o usuário ativou o recebimento de newsletter */
  "GET /usuarios/:email/comunicacao": {};
  /** @description Atualiza a comunicação de um usuário via newsletter */
  "PUT /usuarios/:email/comunicacao": {
    searchParams: {
      /**
       * Novo status da comunicação via new ajuste realisletter
       */
      recebimentoNewsletter?: boolean;
    };
  };
  /** @description Buscar autor por id */
  "GET /autores/:autorId": {};
  /** @description Atualizar autor */
  "PUT /autores/:autorId": {
    searchParams: {
      /**
       * Nome do Autor
       */
      nome?: string;
      /**
       * Status do autor
       */
      ativo?: boolean;
    };
  };
  /** @description Deletar autor */
  "DELETE /autores/:autorId": {};
  /** @description Retorna lista contendo os Id's dos pedidos do usuário */
  "GET /usuarios/:email/pedidos": {};
  /** @description Usuário encontrado */
  "GET /usuarios/cpf/:cpf": {};
  /** @description Loja Física */
  "GET /lojasFisicas/:lojaFisicaId": {};
  /** @description Atualiza uma Loja Física */
  "PUT /lojasFisicas/:lojaFisicaId": {
    searchParams: {
      /**
       * Id da loja (optional)
       */
      lojaId?: number;
      /**
       * Nome da loja (optional)
       */
      nome?: string;
      /**
       * DDD da localidade de destino da loja (optional)
       */
      ddd?: number;
      /**
       * Telefone da loja (optional)
       */
      telefone?: string;
      /**
       * E-mail de contato da loja (optional)
       */
      email?: string;
      /**
       * CEP do endereço da loja (optional)
       */
      cep?: string;
      /**
       * Logradouro do endereço da loja (optional)
       */
      logradouro?: string;
      /**
       * Número de localização do endereço da loja (optional)
       */
      numero?: string;
      /**
       * Complemento para localização da loja (optional)
       */
      complemento?: string;
      /**
       * Bairro do endereço do loja (optional)
       */
      bairro?: string;
      /**
       * Cidade em que a loja se encontra (optional)
       */
      cidade?: string;
      /**
       * Id do estado em que a loja se encontra (optional)
       */
      estadoId?: number;
      /**
       * Prazo de entrega (optional)
       */
      prazoEntrega?: number;
      /**
       * Prazo máximo para retirada (optional)
       */
      prazoMaximoRetirada?: number;
      /**
       * Status da loja (optional)
       */
      ativo?: boolean;
      /**
       * Valido (optional)
       */
      valido?: boolean;
      /**
       * Informações complementares da loja (optional)
       */
      textoComplementar?: string;
      /**
       * Se a retirada na loja será ativada (optional)
       */
      retirarNaLoja?: boolean;
      /**
       * Latitude (optional)
       */
      latitude?: number;
      /**
       * Longitude (optional)
       */
      longitude?: number;
      /**
       * Lista com os Identificadores dos centros de distribuição que serão vinculados a loja física (optional)
       */
      centroDistribuicao?: {
        /**
         * Id do centro de distribuição
         */
        centroDistribuicaoId?: number;
        /**
         * Prazo de entrega
         */
        prazoEntrega?: number;
      }[];
    };
  };
  /** @description Remove uma Loja Física */
  "DELETE /lojasFisicas/:lojaFisicaId": {};
  /** @description Atributo encontrado */
  "GET /atributos/:nome": {};
  /** @description Atualiza um atributo */
  "PUT /atributos/:nome": {
    searchParams: {
      /**
       * Nome do atributo (optional)
       */
      nome?: string;
      /**
       * Tipo do atributo (optional)
       */
      tipo?:
        | {
          "0": "S";
          "1": "e";
          "2": "l";
          "3": "e";
          "4": "c";
          "5": "a";
          "6": "o";
        }
        | { "0": "F"; "1": "i"; "2": "l"; "3": "t"; "4": "r"; "5": "o" }
        | {
          "0": "C";
          "1": "o";
          "2": "m";
          "3": "p";
          "4": "a";
          "5": "r";
          "6": "a";
          "7": "c";
          "8": "a";
          "9": "o";
        }
        | {
          "0": "C";
          "1": "o";
          "2": "n";
          "3": "f";
          "4": "i";
          "5": "g";
          "6": "u";
          "7": "r";
          "8": "a";
          "9": "c";
          "10": "a";
          "11": "o";
        }
        | {
          "0": "E";
          "1": "x";
          "2": "c";
          "3": "l";
          "4": "u";
          "5": "s";
          "6": "i";
          "7": "v";
          "8": "o";
          "9": "G";
          "10": "o";
          "11": "o";
          "12": "g";
          "13": "l";
          "14": "e";
        };
      /**
       * Tipo de exibição (optional)
       */
      tipoExibicao?:
        | { "0": "C"; "1": "o"; "2": "m"; "3": "b"; "4": "o" }
        | { "0": "D"; "1": "i"; "2": "v" }
        | {
          "0": "D";
          "1": "i";
          "2": "v";
          "3": "C";
          "4": "o";
          "5": "m";
          "6": "C";
          "7": "o";
          "8": "r";
        }
        | {
          "0": "D";
          "1": "i";
          "2": "v";
          "3": "C";
          "4": "o";
          "5": "m";
          "6": "F";
          "7": "o";
          "8": "t";
          "9": "o";
          "10": "D";
          "11": "o";
          "12": "P";
          "13": "r";
          "14": "o";
          "15": "d";
          "16": "u";
          "17": "t";
          "18": "o";
          "19": "V";
          "20": "a";
          "21": "r";
          "22": "i";
          "23": "a";
          "24": "n";
          "25": "t";
          "26": "e";
        }
        | {
          "0": "J";
          "1": "a";
          "2": "v";
          "3": "a";
          "4": "s";
          "5": "c";
          "6": "r";
          "7": "i";
          "8": "p";
          "9": "t";
        };
      /**
       * Prioridade do atributo (optional)
       */
      prioridade?: number;
    };
  };
  /** @description Deleta um atributo */
  "DELETE /atributos/:nome": {};
  /** @description Lista de resellers */
  "GET /resellers": {};
  /** @description Insere um novo Seller no marketplace */
  "POST /resellers": {
    searchParams: {
      /**
       * Razão Social/Nome do Reseller
       */
      razaoSocial?: string;
      /**
       * CNPJ do Seller
       */
      cnpj?: string;
      /**
       * Inscrição Estadual do Seller
       */
      inscricaoEstadual?: string;
      /**
       * Seller isento de inscrição estadual
       */
      isento?: boolean;
      /**
       * Email de contato do Seller
       */
      email?: string;
      /**
       * Telefone de contato do seller com ddd (xx) xxxx-xxxx
       */
      telefone?: string;
      /**
       * Tipo de autonomia do vendedor
       */
      tipoAutonomia?:
        | {
          "0": "C";
          "1": "o";
          "2": "m";
          "3": "A";
          "4": "u";
          "5": "t";
          "6": "o";
          "7": "n";
          "8": "o";
          "9": "m";
          "10": "i";
          "11": "a";
        }
        | {
          "0": "S";
          "1": "e";
          "2": "m";
          "3": "A";
          "4": "u";
          "5": "t";
          "6": "o";
          "7": "n";
          "8": "o";
          "9": "m";
          "10": "i";
          "11": "a";
        };
      /**
       * Seller Ativo
       */
      ativo?: boolean;
      /**
       * Se irá ter Split de frete boolean. Default:false
       */
      split?: boolean;
      /**
       * Se o produto deverá ser apresentado em BuyBox (apenas para Seller's e Marketplace's TrayCorp) boolean. Default:false,
       */
      buyBox?: boolean;
      /**
       * Se os produtos deverão sem ativados automaticamente no marketplace boolean. Default:false,
       */
      ativacaoAutomaticaProdutos?: boolean;
      /**
       * Cep do Seller (utilizado para o calculo de frete)
       */
      cep?: string;
    };
  };
  /** @description Atualiza um novo Seller no marketplace */
  "PUT /resellers": {
    searchParams: {
      /**
       * Razão Social/Nome do Reseller
       */
      razaoSocial?: string;
      /**
       * CNPJ do Seller
       */
      cnpj?: string;
      /**
       * Inscrição Estadual do Seller
       */
      inscricaoEstadual?: string;
      /**
       * Seller isento de inscrição estadual
       */
      isento?: boolean;
      /**
       * Email de contato do Seller
       */
      email?: string;
      /**
       * Telefone de contato do seller com ddd (xx) xxxx-xxxx
       */
      telefone?: string;
      /**
       * Tipo de autonomia do vendedor
       */
      tipoAutonomia?:
        | {
          "0": "C";
          "1": "o";
          "2": "m";
          "3": "A";
          "4": "u";
          "5": "t";
          "6": "o";
          "7": "n";
          "8": "o";
          "9": "m";
          "10": "i";
          "11": "a";
        }
        | {
          "0": "S";
          "1": "e";
          "2": "m";
          "3": "A";
          "4": "u";
          "5": "t";
          "6": "o";
          "7": "n";
          "8": "o";
          "9": "m";
          "10": "i";
          "11": "a";
        };
      /**
       * Seller Ativo
       */
      ativo?: boolean;
      /**
       * Se irá ter Split de frete boolean. Default:false
       */
      split?: boolean;
      /**
       * Se o produto deverá ser apresentado em BuyBox (apenas para Seller's e Marketplace's TrayCorp) boolean. Default:false,
       */
      buyBox?: boolean;
      /**
       * Se os produtos deverão sem ativados automaticamente no marketplace boolean. Default:false,
       */
      ativacaoAutomaticaProdutos?: boolean;
      /**
       * Cep do Seller (utilizado para o calculo de frete)
       */
      cep?: string;
    };
  };
  /** @description Reseller específico */
  "GET /resellers/:resellerId": {};
  /** @description Lista de produtos */
  "GET /produtos": {};
  /** @description Método que insere um produto na base */
  "POST /produtos": {
    searchParams: {
      /**
       * Representa o ProdutoId agrupador por variante (optional)
       */
      idPaiExterno?: string;
      /**
       * Representa o ParentId agrupador por parent (optional)
       */
      idVinculoExterno?: string;
      /**
       * (Max Length: 50) Sku do produto
       */
      sku?: string;
      /**
       * (Max Length: 300) Nome do produto variante
       */
      nome?: string;
      /**
       * Nome do produto (pai do variante) (optional)
       */
      nomeProdutoPai?: string;
      /**
       * Tipo de exibição da matriz de atributos (optional)
       */
      exibirMatrizAtributos?:
        | { "0": "S"; "1": "i"; "2": "m" }
        | { "0": "N"; "1": "a"; "2": "o" }
        | { "0": "N"; "1": "e"; "2": "u"; "3": "t"; "4": "r"; "5": "o" };
      /**
       * Se o produto aceita contra proposta (optional)
       */
      contraProposta?: boolean;
      /**
       * (Max Length: 100) Nome do fabricante
       */
      fabricante?: string;
      /**
       * (Max Length: 500) Nome do autor (optional)
       */
      autor?: string;
      /**
       * (Max Length: 100) Nome da editora (optional)
       */
      editora?: string;
      /**
       * (Max Length: 100) Nome da coleção (optional)
       */
      colecao?: string;
      /**
       * (Max Length: 100) Nome do gênero (optional)
       */
      genero?: string;
      /**
       * Max Length: 8, "0000.0000,00") Preço de custo do produto variante (optional)
       */
      precoCusto?: number;
      /**
       * (Max Length: 8, "0000.0000,00") "Preço De" do produto variante (optional)
       */
      precoDe?: number;
      /**
       * (Max Length: 8, "0000.0000,00") "Preço Por" de venda do produto variante
       */
      precoPor?: number;
      /**
       * (Max Length: 8, "0000.0000,00") Fator multiplicador que gera o preço de exibição do produto.Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no "PrecoPor". (1 por padrão) (optional)
       */
      fatorMultiplicadorPreco?: number;
      /**
       * Prazo de entrega do produto variante (optional)
       */
      prazoEntrega?: number;
      /**
       * Define se um produto variante é valido ou não
       */
      valido?: boolean;
      /**
       * Define se um produto deve ser exibido no site
       */
      exibirSite?: boolean;
      /**
       * Define a qual regra de calculo de frete o produto vai pertencer
       */
      freteGratis?:
        | { "0": "S"; "1": "e"; "2": "m"; "3": "p"; "4": "r"; "5": "e" }
        | { "0": "N"; "1": "u"; "2": "n"; "3": "c"; "4": "a" }
        | { "0": "N"; "1": "e"; "2": "u"; "3": "t"; "4": "r"; "5": "o" }
        | {
          "0": "D";
          "1": "e";
          "2": "s";
          "3": "c";
          "4": "o";
          "5": "n";
          "6": "s";
          "7": "i";
          "8": "d";
          "9": "e";
          "10": "r";
          "11": "a";
          "12": "r";
          "13": "_";
          "14": "R";
          "15": "e";
          "16": "g";
          "17": "r";
          "18": "a";
          "19": "s";
        };
      /**
       * Define se o produto variante tem troca grátis (optional)
       */
      trocaGratis?: boolean;
      /**
       * (Max Length: 8, "0000.0000,00") Peso do produto variante, em gramas (g).
       */
      peso?: number;
      /**
       * (Max Length: 8, "0000.0000,00") Altura do produto variante, em centímetros (cm).
       */
      altura?: number;
      /**
       * (Max Length: 8, "0000.0000,00") Comprimento do produto variante, em centímetros (cm).
       */
      comprimento?: number;
      /**
       * (Max Length: 8, "0000.0000,00") Largura do produto variante,  em centímetros (cm).
       */
      largura?: number;
      /**
       * Define se o produto variante tem garantia (optional)
       */
      garantia?: number;
      /**
       * Define se o produto contém televendas (optional)
       */
      isTelevendas?: boolean;
      /**
       * (Max Length: 25) EAN do produto variante (optional)
       */
      ean?: string;
      /**
       * (Max Length: 255) Localização no estoque do produto variante (optional)
       */
      localizacaoEstoque?: string;
      /**
       * Dados de atacado do produto variante (optional)
       */
      listaAtacado?: {
        /**
         * (Max Length: 8, "0000.0000,00") - Preco Por do item por atacado
         */
        precoPor?: number;
        /**
         * Quantidade para compra de atacado
         */
        quantidade?: number;
      }[];
      /**
       * Lista de estoque/centro de distribuição do produto. Obrigatório se valido for true (optional)
       */
      estoque?: {
        /**
         * Estoque físico do produto
         */
        estoqueFisico?: number;
        /**
         * Estoque reservado do produto
         */
        estoqueReservado?: number;
        /**
         * Id do centro de distribuição do estoque do produto
         */
        centroDistribuicaoId?: number;
        /**
         * Quantidade para ativar o alerta de estoque
         */
        alertaEstoque?: number;
      }[];
      /**
       * Lista de atributos do produto
       */
      listaAtributos?: {
        /**
         * (Max Length: 100) - Define o nome do atributo
         */
        nome?: string;
        /**
         * (Max Length: 8, "0000.0000,00") - Define o valor do atributo
         */
        valor?: string;
        /**
         * Define se o atributo deverá ser exibido
         */
        exibir?: boolean;
      }[];
      /**
       * Quantidade máxima de compra do produto variante (optional)
       */
      quantidadeMaximaCompraUnidade?: number;
      /**
       * Quantidade mínima de compra do produto variante (optional)
       */
      quantidadeMinimaCompraUnidade?: number;
      /**
       * Condição do produto variante (optional)
       */
      condicao?:
        | { "0": "N"; "1": "o"; "2": "v"; "3": "o" }
        | { "0": "U"; "1": "s"; "2": "a"; "3": "d"; "4": "o" }
        | {
          "0": "R";
          "1": "e";
          "2": "n";
          "3": "o";
          "4": "v";
          "5": "a";
          "6": "d";
          "7": "o";
        }
        | {
          "0": "D";
          "1": "a";
          "2": "n";
          "3": "i";
          "4": "f";
          "5": "i";
          "6": "c";
          "7": "a";
          "8": "d";
          "9": "o";
        };
      /**
       * Url do vídeo do Produto (optional)
       */
      urlVideo?: string;
      /**
       * Se o produto aparece no Spot (optional)
       */
      spot?: boolean;
      /**
       * Se o produto aparece na Url (optional)
       */
      paginaProduto?: boolean;
      /**
       * Se o produto aparece no Marketplace (optional)
       */
      marketplace?: boolean;
      /**
       * Se o produto aparece somente nos Parceiros (optional)
       */
      somenteParceiros?: boolean;
      /**
       * Se o produto deve ser agrupado pelo EAN (optional)
       */
      buyBox?: boolean;
      /**
       * Prazo de validade ou consumo do produto (optional)
       */
      prazoValidade?: number;
      /**
       * Dados de consumo de produto e se deve enviar os dias de consumo por e-mail.
       */
      consumo?: {
        /**
         * Quantidade de Dias (optional)
         */
        quantidadeDias?: number;
        /**
         * Enviar e-mail (optional)
         */
        enviarEmail?: boolean;
      };
    };
  };
  /** @description Remove um produto de uma tabela de preço */
  "DELETE /tabelaPrecos/:tabelaPrecoId/:sku": {};
  /** @description Atualiza o frete de todos os produtos de um pedido */
  "PUT /pedidos/:pedidoId/changeseller": {
    searchParams: {
      /**
       * Objeto com os dados de cotação e responsável
       */
      RAW_BODY?: {
        /**
         * ID da cotação retornada em GET /fretes/pedidos/{pedidoId}/cotacoes
         */
        cotacao?: string;
        /**
         * Responsável pela cotação
         */
        responsavel?: string;
      };
    };
  };
  /** @description Objeto do banner */
  "GET /banners/:bannerId": {};
  /** @description Atualiza um banner existente */
  "PUT /banners/:bannerId": {
    searchParams: {
      /**
       * Nome do banner
       */
      nome?: string;
      /**
       * Data de inicio de exibição do banner
       */
      dataInicio?: string;
      /**
       * Data de termino de exibição do banner (optional)
       */
      dataFim?: string;
      /**
       * Banner ativo/inativo (optional)
       */
      ativo?: boolean;
      /**
       * Detalhes do banner
       */
      detalhe?: {
        /**
         * Local de posicionamento do banner
         */
        posicionamentoId?: number;
        /**
         * Imagem do banner (caso o campo "UrlBanner" estiver preenchido esse campo será desconsiderado) (optional)
         */
        imagemBanner?: {
          /**
           * string da imagem em base 64
           */
          base64?: string;
          /**
           * formato da imagem
           */
          formato?:
            | { "0": "P"; "1": "N"; "2": "G" }
            | { "0": "J"; "1": "P"; "2": "G" }
            | { "0": "J"; "1": "P"; "2": "E"; "3": "G" };
          /**
           * nome da imagem
           */
          nome?: string;
        };
        /**
         * Url de onde o banner deve ser carregado (Ex.: http://www.site.com.br/banner.swf). O Banner poderá ser do tipo flash ou imagem (optional)
         */
        urlBanner?: string;
        /**
         * Ordem de exibição do banner (optional)
         */
        ordemExibicao?: number;
        /**
         * Se o banner deve ou não abrir em nova aba (optional)
         */
        abrirLinkNovaAba?: boolean;
        /**
         * Largura do banner em pixels (optional)
         */
        largura?: number;
        /**
         * Altura do banner em pixels (optional)
         */
        altura?: number;
        /**
         * Title da imagem do banner (optional)
         */
        title?: string;
        /**
         * Url de destino para quando o usuário clicar no Banner (optional)
         */
        urlClique?: string;
        /**
         * URL para um Banner alternativo que será exibido caso ocorra algum problema para exibição do Banner (optional)
         */
        urlBannerAlternativo?: string;
        /**
         * Title alternativo que será exibido caso ocorra algum problema para a exibição do Banner
         */
        textoAlternativo?: string;
      };
      /**
       * Dias da semana que o banner deverá ser exibido (optional)
       */
      diasExibicao?: {
        /**
         * Se o banner deverá ser exibido todos os dias (caso esse campo estiver preenchido como "true" os demais serão desconsiderados)
         */
        todosDias?: boolean;
        /**
         * Se o banner deverá ser apresentado no domingo
         */
        domingo?: boolean;
        /**
         * Se o banner deverá ser apresentado na segunda
         */
        segunda?: boolean;
        /**
         * Se o banner deverá ser apresentado na terça
         */
        terca?: boolean;
        /**
         * Se o banner deverá ser apresentado na quarta
         */
        quarta?: boolean;
        /**
         * Se o banner deverá ser apresentado na quinta
         */
        quinta?: boolean;
        /**
         * Se o banner deverá ser apresentado na sexta
         */
        sexta?: boolean;
        /**
         * Se o banner deverá ser apresentado no sábado
         */
        sabado?: boolean;
      };
      /**
       * Apresentação do banner (optional)
       */
      apresentacao?: {
        /**
         * Se o banner deverá ser exibido em todo o site
         */
        exibirNoSite?: boolean;
        /**
         * Se o banner deverá ser exibido em todas as buscas
         */
        exibirEmTodasBuscas?: boolean;
        /**
         * Se o banner não deverá ser exibido em nenhuma busca (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado)
         */
        naoExibirEmBuscas?: boolean;
        /**
         * Termos que o banner será exibido na busca
         */
        termosBusca?: string;
        /**
         * Se o banner deverá ser exibido em todas categorias (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado)
         */
        exibirEmTodasCategorias?: boolean;
        /**
         * Em quais hotsites o banner deve ser exibido
         */
        listaHotsites?: {
          /**
           * Se o banner deverá ser exibido em todos as hotsite's (Caso esse campo estiver como "true" o campo HotSites será desconsiderado) (optional)
           */
          exibirEmTodosHotsites?: boolean;
          /**
           * Lista de hotsite's que o banner será exibido
           */
          hotsites?: {
            /**
             * Id do hotsite (optional)
             */
            hotSiteId?: number;
          }[];
        };
      };
      /**
       * Em quais parceiros o banner deve ser exibido
       */
      listaParceiros?: {
        /**
         * Se o banner deverá ser exibido em todos parceiros (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado) (optional)
         */
        exibirEmTodosParceiros?: boolean;
        /**
         * Lista de parceiros que o banner será exibido
         */
        parceiros?: {
          /**
           * Id do parceiro (optional)
           */
          parceiroId?: number;
        }[];
      };
    };
  };
  /** @description Deleta um banner existente */
  "DELETE /banners/:bannerId": {};
  /** @description Atualiza um produto em uma assinatura */
  "PUT /assinaturas/produtos/:assinaturaProdutoId/Alterar": {
    searchParams: {
      /**
       * Novo valor do produto na assinatura (optional)
       */
      valor?: number;
      /**
       * Se o produto será considerado removido ou não da assinatura (optional)
       */
      removido?: boolean;
      /**
       * Quantidade do produto na assinatura (optional)
       */
      quantidade?: number;
    };
  };
  /** @description Parceiro encontrado */
  "GET /parceiros/:parceiroId": {};
  /** @description Parceiro atualizado com sucesso */
  "PUT /parceiros/:parceiroId": {
    searchParams: {
      /**
       * Nome do parceiro
       */
      nome?: string;
      /**
       * Id da tabela de preço (optional)
       */
      tabelaPrecoId?: number;
      /**
       * Id do portfolio (optional)
       */
      portfolioId?: number;
      /**
       * Tipo de escopo
       */
      tipoEscopo?:
        | {
          "0": "A";
          "1": "b";
          "2": "e";
          "3": "r";
          "4": "t";
          "5": "o";
          "6": '"';
        }
        | {
          "0": "F";
          "1": "e";
          "2": "c";
          "3": "h";
          "4": "a";
          "5": "d";
          "6": "o";
        }
        | {
          "0": "P";
          "1": "o";
          "2": "r";
          "3": "C";
          "4": "l";
          "5": "i";
          "6": "e";
          "7": "n";
          "8": "t";
          "9": "e";
        };
      /**
       * Status do parceiro
       */
      ativo?: boolean;
      /**
       * Se o parceiro é marketplace (optional)
       */
      isMarketPlace?: boolean;
      /**
       * Origem (optional)
       */
      origem?: string;
      /**
       * alias (optional)
       */
      alias?: string;
    };
  };
  /** @description Parceiro excluído com sucesso */
  "DELETE /parceiros/:parceiroId": {};
  /** @description Lista de parceiros */
  "GET /parceiros": {};
  /** @description Insere um novo parceiro */
  "POST /parceiros": {
    searchParams: {
      /**
       * Nome do parceiro
       */
      nome?: string;
      /**
       * Id da tabela de preço (optional)
       */
      tabelaPrecoId?: number;
      /**
       * Id do portfolio (optional)
       */
      portfolioId?: number;
      /**
       * Tipo de escopo
       */
      tipoEscopo?:
        | {
          "0": "A";
          "1": "b";
          "2": "e";
          "3": "r";
          "4": "t";
          "5": "o";
          "6": '"';
        }
        | {
          "0": "F";
          "1": "e";
          "2": "c";
          "3": "h";
          "4": "a";
          "5": "d";
          "6": "o";
        }
        | {
          "0": "P";
          "1": "o";
          "2": "r";
          "3": "C";
          "4": "l";
          "5": "i";
          "6": "e";
          "7": "n";
          "8": "t";
          "9": "e";
        };
      /**
       * Status do parceiro
       */
      ativo?: boolean;
      /**
       * Se o parceiro é marketplace (optional)
       */
      isMarketPlace?: boolean;
      /**
       * Origem (optional)
       */
      origem?: string;
    };
  };
  /** @description Lista de tipos de evento */
  "GET /tiposEvento": {};
  /** @description Insere um novo tipo de evento */
  "POST /tiposEvento": {
    searchParams: {
      /**
       * Nome do Tipo de Evento
       */
      nome?: string;
      /**
       * Tipo de entrega
       */
      tipoEntrega?:
        | {
          "0": "E";
          "1": "n";
          "2": "t";
          "3": "r";
          "4": "e";
          "5": "g";
          "6": "a";
          "7": "A";
          "8": "g";
          "9": "e";
          "10": "n";
          "11": "d";
          "12": "a";
          "13": "d";
          "14": "a";
        }
        | {
          "0": "E";
          "1": "n";
          "2": "t";
          "3": "r";
          "4": "e";
          "5": "g";
          "6": "a";
          "7": "C";
          "8": "o";
          "9": "n";
          "10": "f";
          "11": "o";
          "12": "r";
          "13": "m";
          "14": "e";
          "15": "C";
          "16": "o";
          "17": "m";
          "18": "p";
          "19": "r";
          "20": "a";
          "21": "R";
          "22": "e";
          "23": "a";
          "24": "l";
          "25": "i";
          "26": "z";
          "27": "a";
          "28": "d";
          "29": "a";
        }
        | { "0": "T"; "1": "o"; "2": "d"; "3": "o"; "4": "s" }
        | { "0": "N"; "1": "e"; "2": "n"; "3": "h"; "4": "u"; "5": "m" };
      /**
       * Disponibilização do Tipo de Evento
       */
      tipoDisponibilizacao?:
        | {
          "0": "D";
          "1": "i";
          "2": "s";
          "3": "p";
          "4": "o";
          "5": "n";
          "6": "i";
          "7": "b";
          "8": "i";
          "9": "l";
          "10": "i";
          "11": "z";
          "12": "a";
          "13": "c";
          "14": "a";
          "15": "o";
          "16": "D";
          "17": "e";
          "18": "C";
          "19": "r";
          "20": "e";
          "21": "d";
          "22": "i";
          "23": "t";
          "24": "o";
          "25": "s";
        }
        | {
          "0": "D";
          "1": "i";
          "2": "s";
          "3": "p";
          "4": "o";
          "5": "n";
          "6": "i";
          "7": "b";
          "8": "i";
          "9": "l";
          "10": "i";
          "11": "z";
          "12": "a";
          "13": "c";
          "14": "a";
          "15": "o";
          "16": "D";
          "17": "e";
          "18": "P";
          "19": "r";
          "20": "o";
          "21": "d";
          "22": "u";
          "23": "t";
          "24": "o";
          "25": "s";
        }
        | { "0": "T"; "1": "o"; "2": "d"; "3": "o"; "4": "s" };
      /**
       * Permissão para remoção automática de produtos
       */
      permitirRemocaoAutomaticaProdutos?: boolean;
      /**
       * Cor em hexadecimal para o titulo de informações
       */
      corHexTituloInformacoes?: string;
      /**
       * Cor em hexadecimal para o corpo de informações
       */
      corHexCorpoInformacoes?: string;
      /**
       * Número de abas de informações, podendo ser de 1 a 2
       */
      numeroAbasInformacoes?: number;
      /**
       * Quantidade de dias para que o evento expire
       */
      quantidadeDiasParaEventoExpirar?: number;
      /**
       * Quantidade de locais do evento
       */
      numeroLocaisEvento?: number;
      /**
       * Informa se o evento está ativo ou inativo
       */
      ativo?: boolean;
      /**
       * Informa a disponibilidade do evento
       */
      disponivel?: boolean;
      /**
       * O beneficiário do frete
       */
      tipoBeneficiarioFrete?:
        | {
          "0": "D";
          "1": "o";
          "2": "n";
          "3": "o";
          "4": "d";
          "5": "a";
          "6": "L";
          "7": "i";
          "8": "s";
          "9": "t";
          "10": "a";
        }
        | {
          "0": "C";
          "1": "o";
          "2": "n";
          "3": "v";
          "4": "i";
          "5": "d";
          "6": "a";
          "7": "d";
          "8": "o";
        };
      /**
       * Imagem da logo do evento em base64
       */
      imagemLogoEvento?: string;
      /**
       * Produtos Sugeridos para este evento (optional)
       */
      sugestaoProdutos?: {
        /**
         * Id do tipo de evento
         */
        tipoEventoId?: number;
        /**
         * Identificador do produto variante
         */
        produtoVarianteId?: number;
      }[];
    };
  };
  /** @description Lista de preços e estoque de produtos que sofreram alterações */
  "GET /produtos/alteracoes": {};
  /** @description Retorna a situação reseller de um produto */
  "GET /produtos/:identificador/situacaoReseller": {};
  /** @description Lista de atributos */
  "GET /atributos": {};
  /** @description Insere um novo atributo */
  "POST /atributos": {
    searchParams: {
      /**
       * Nome do atributo (optional)
       */
      nome?: string;
      /**
       * Tipo do atributo (optional)
       */
      tipo?:
        | {
          "0": "S";
          "1": "e";
          "2": "l";
          "3": "e";
          "4": "c";
          "5": "a";
          "6": "o";
        }
        | { "0": "F"; "1": "i"; "2": "l"; "3": "t"; "4": "r"; "5": "o" }
        | {
          "0": "C";
          "1": "o";
          "2": "m";
          "3": "p";
          "4": "a";
          "5": "r";
          "6": "a";
          "7": "c";
          "8": "a";
          "9": "o";
        }
        | {
          "0": "C";
          "1": "o";
          "2": "n";
          "3": "f";
          "4": "i";
          "5": "g";
          "6": "u";
          "7": "r";
          "8": "a";
          "9": "c";
          "10": "a";
          "11": "o";
        }
        | {
          "0": "E";
          "1": "x";
          "2": "c";
          "3": "l";
          "4": "u";
          "5": "s";
          "6": "i";
          "7": "v";
          "8": "o";
          "9": "G";
          "10": "o";
          "11": "o";
          "12": "g";
          "13": "l";
          "14": "e";
        };
      /**
       * Tipo de exibição (optional)
       */
      tipoExibicao?:
        | { "0": "C"; "1": "o"; "2": "m"; "3": "b"; "4": "o" }
        | { "0": "D"; "1": "i"; "2": "v" }
        | {
          "0": "D";
          "1": "i";
          "2": "v";
          "3": "C";
          "4": "o";
          "5": "m";
          "6": "C";
          "7": "o";
          "8": "r";
        }
        | {
          "0": "D";
          "1": "i";
          "2": "v";
          "3": "C";
          "4": "o";
          "5": "m";
          "6": "F";
          "7": "o";
          "8": "t";
          "9": "o";
          "10": "D";
          "11": "o";
          "12": "P";
          "13": "r";
          "14": "o";
          "15": "d";
          "16": "u";
          "17": "t";
          "18": "o";
          "19": "V";
          "20": "a";
          "21": "r";
          "22": "i";
          "23": "a";
          "24": "n";
          "25": "t";
          "26": "e";
        }
        | {
          "0": "J";
          "1": "a";
          "2": "v";
          "3": "a";
          "4": "s";
          "5": "c";
          "6": "r";
          "7": "i";
          "8": "p";
          "9": "t";
        };
      /**
       * Prioridade do atributo (optional)
       */
      prioridade?: number;
    };
  };
  /** @description Inscrição */
  "GET /webhook/inscricao/:inscricaoId": {};
  /** @description Atualiza uma inscrição */
  "PUT /webhook/inscricao/:inscricaoId": {
    searchParams: {
      /**
       * Nome da inscrição
       */
      nome?: string;
      /**
       * Url para qual deve ser enviada as notificações
       */
      appUrl?: string;
      /**
       * Tópicos em que deseja se inscrever
       */
      topicos?: string[];
      /**
       * Usuário que está realizando a inscrição
       */
      usuario?: string;
      /**
       * Status da inscrição, se ativada ou desativada
       */
      ativo?: boolean;
      /**
       * E-mail do responsável para notificá-lo quando não seja possível notificá-lo pelo AppUrl informado
       */
      emailResponsavel?: string;
      /**
       * Headers que devam ser adicionados ao realizar a requisição para o AppUrl. Headers de Conteúdo como 'ContentType' não são necessário. As requisições realizada sempre serão no formato 'application/json' (optional)
       */
      headers?: {
        /**
         * Chave do header, por exemplo: 'Authorization'
         */
        chave?: string;
        /**
         * Valor / Conteúdo do header, por exemplo: 'Basic 0G3EQWD-W324F-234SD-2421OFSD'
         */
        valor?: string;
      }[];
    };
  };
  /** @description Produtos de uma assinatura */
  "GET /assinaturas/:assinaturaId/produtos": {};
  /** @description Insere um novo produto na assinatura */
  "POST /assinaturas/:assinaturaId/produtos": {
    searchParams: {
      /**
       * Produto Variante que será incluído na assinatura
       */
      produtoVarianteId?: number;
      /**
       * Quantidade do produto que será inserido na assinatura
       */
      quantidade?: number;
    };
  };
  /** @description Categoria encontrada */
  "GET /categorias/:id": {};
  /** @description Atualiza uma categoria */
  "PUT /categorias/:id": {
    searchParams: {
      /**
       * Nome da categoria (optional)
       */
      nome?: string;
      /**
       * Id da categoria pai (optional)
       */
      categoriaPaiId?: number;
      /**
       * Id da categoria ERP (optional)
       */
      categoriaERPId?: string;
      /**
       * Categoria ativo/inativo (optional)
       */
      ativo?: boolean;
      /**
       * Categoria de reseller (optional)
       */
      isReseller?: boolean;
      /**
       * Exibir Matriz de Atributos (optional)
       */
      exibirMatrizAtributos?:
        | { "0": "S"; "1": "i"; "2": "m" }
        | { "0": "N"; "1": "a"; "2": "o" }
        | { "0": "N"; "1": "e"; "2": "u"; "3": "t"; "4": "r"; "5": "o" };
      /**
       * Informe a quantidade máxima permitida para compra por produtos desta categoria. Informe zero para assumir a configuração geral da loja (optional)
       */
      quantidadeMaximaCompraUnidade?: number;
      /**
       * Informe o valor mínimo para compra em produtos desta categoria (optional)
       */
      valorMinimoCompra?: number;
      /**
       * Informe se será exibida no menu (optional)
       */
      exibeMenu?: boolean;
    };
  };
  /** @description Exclui uma categoria */
  "DELETE /categorias/:id": {};
  /** @description Retorna todos os identificadores dos produtos/variantes relacionados ao produto pesquisado */
  "GET /produtos/:identificador/relacionados": {};
  /** @description Atualiza um valor pré definido pelo id */
  "PUT /usuarios/valoresdefinidoscadastropersonalizado/:valoresDefinidosCampoGrupoInformacaoId":
    {
      searchParams: {
        /**
         * Valor para o campo (optional)
         */
        valor?: string;
        /**
         * Ordem (optional)
         */
        ordem?: number;
      };
    };
  /** @description Remove um valor pré definido */
  "DELETE /usuarios/valoresdefinidoscadastropersonalizado/:valoresDefinidosCampoGrupoInformacaoId":
    {};
  /** @description Lista de banners */
  "GET /banners": {};
  /** @description Insere um novo banner */
  "POST /banners": {
    searchParams: {
      /**
       * Nome do banner
       */
      nome?: string;
      /**
       * Data de inicio de exibição do banner
       */
      dataInicio?: string;
      /**
       * Data de termino de exibição do banner (optional)
       */
      dataFim?: string;
      /**
       * Banner ativo/inativo (optional)
       */
      ativo?: boolean;
      /**
       * Detalhes do banner
       */
      detalhe?: {
        /**
         * Local de posicionamento do banner
         */
        posicionamentoId?: number;
        /**
         * Imagem do banner (caso o campo "UrlBanner" estiver preenchido esse campo será desconsiderado) (optional)
         */
        imagemBanner?: {
          /**
           * string da imagem em base 64
           */
          base64?: string;
          /**
           * formato da imagem
           */
          formato?:
            | { "0": "P"; "1": "N"; "2": "G" }
            | { "0": "J"; "1": "P"; "2": "G" }
            | { "0": "J"; "1": "P"; "2": "E"; "3": "G" };
          /**
           * nome da imagem
           */
          nome?: string;
        };
        /**
         * Url de onde o banner deve ser carregado (Ex.: http://www.site.com.br/banner.swf). O Banner poderá ser do tipo flash ou imagem (optional)
         */
        urlBanner?: string;
        /**
         * Ordem de exibição do banner (optional)
         */
        ordemExibicao?: number;
        /**
         * Se o banner deve ou não abrir em nova aba (optional)
         */
        abrirLinkNovaAba?: boolean;
        /**
         * Largura do banner em pixels (optional)
         */
        largura?: number;
        /**
         * Altura do banner em pixels (optional)
         */
        altura?: number;
        /**
         * Title da imagem do banner (optional)
         */
        title?: string;
        /**
         * Url de destino para quando o usuário clicar no Banner (optional)
         */
        urlClique?: string;
        /**
         * URL para um Banner alternativo que será exibido caso ocorra algum problema para exibição do Banner (optional)
         */
        urlBannerAlternativo?: string;
        /**
         * Title alternativo que será exibido caso ocorra algum problema para a exibição do Banner
         */
        textoAlternativo?: string;
      };
      /**
       * Dias da semana que o banner deverá ser exibido (optional)
       */
      diasExibicao?: {
        /**
         * Se o banner deverá ser exibido todos os dias (caso esse campo estiver preenchido como "true" os demais serão desconsiderados)
         */
        todosDias?: boolean;
        /**
         * Se o banner deverá ser apresentado no domingo
         */
        domingo?: boolean;
        /**
         * Se o banner deverá ser apresentado na segunda
         */
        segunda?: boolean;
        /**
         * Se o banner deverá ser apresentado na terça
         */
        terca?: boolean;
        /**
         * Se o banner deverá ser apresentado na quarta
         */
        quarta?: boolean;
        /**
         * Se o banner deverá ser apresentado na quinta
         */
        quinta?: boolean;
        /**
         * Se o banner deverá ser apresentado na sexta
         */
        sexta?: boolean;
        /**
         * Se o banner deverá ser apresentado no sábado
         */
        sabado?: boolean;
      };
      /**
       * Detalhes de apresentação do banner (optional)
       */
      apresentacao?: {
        /**
         * Se o banner deverá ser exibido em todo o site
         */
        exibirNoSite?: boolean;
        /**
         * Se o banner deverá ser exibido em todas as buscas
         */
        exibirEmTodasBuscas?: boolean;
        /**
         * Se o banner não deverá ser exibido em nenhuma busca (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado)
         */
        naoExibirEmBuscas?: boolean;
        /**
         * Termos que o banner será exibido na busca
         */
        termosBusca?: string;
        /**
         * Se o banner deverá ser exibido em todas categorias (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado)
         */
        exibirEmTodasCategorias?: boolean;
        /**
         * Em quais hotsites o banner deve ser exibido
         */
        listaHotsites?: {
          /**
           * Se o banner deverá ser exibido em todos as hotsite's (Caso esse campo estiver como "true" o campo HotSites será desconsiderado) (optional)
           */
          exibirEmTodosHotsites?: boolean;
          /**
           * Lista de hotsite's que o banner será exibido
           */
          hotsites?: {
            /**
             * Id do hotsite (optional)
             */
            hotSiteId?: number;
          }[];
        };
      };
      /**
       * Em quais parceiros o banner deve ser exibido
       */
      listaParceiros?: {
        /**
         * Se o banner deverá ser exibido em todos parceiros (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado) (optional)
         */
        exibirEmTodosParceiros?: boolean;
        /**
         * Lista de parceiros que o banner será exibido
         */
        parceiros?: {
          /**
           * Id do parceiro (optional)
           */
          parceiroId?: number;
        }[];
      };
    };
  };
  /** @description Avatar do usuário encontrado */
  "GET /usuarios/:email/avatar": {};
  /** @description Insere um novo avatar para o usuário */
  "POST /usuarios/:email/avatar": {
    searchParams: {
      /**
       * Imagem do avatar em base64 (optional)
       */
      base64?: string;
      /**
       * Formato da imagem (optional)
       */
      formato?: string;
    };
  };
  /** @description Deleta um avatar de um usuário */
  "DELETE /usuarios/:email/avatar": {};
  /** @description Fabricante encontrado */
  "GET /fabricantes/:fabricanteId": {};
  /** @description Atualiza um fabricante */
  "PUT /fabricantes/:fabricanteId": {
    searchParams: {
      /**
       * Nome do fabricante (optional)
       */
      nome?: string;
      /**
       * URL tipo logo (optional)
       */
      urlLogoTipo?: string;
      /**
       * Insira neste campo uma URL para redirecionamento. A URL deve ser inserida por completa (optional)
       */
      urlLink?: string;
      /**
       * Insira nesse campo a URL do Carrossel  da Marca (optional)
       */
      urlCarrossel?: string;
    };
  };
  /** @description Exclui um fabricante */
  "DELETE /fabricantes/:fabricanteId": {};
  /** @description Lista de posicionamentos do banner */
  "GET /banners/posicionamentos": {};
  /** @description Preços do produto variante informado */
  "GET /produtos/:identificador/precos": {};
  /** @description Atualiza a autonomia de um Seller */
  "PUT /resellers/:resellerId/autonomia": {
    searchParams: {
      /**
       * Status da autonomia do seller
       */
      ativo?: boolean;
    };
  };
  /** @description Lista de produtos variantes vinculados aos tipo de evento */
  "GET /eventos/:eventoId/produtos": {};
  /** @description Vincula um ou mais produtos a um evento sem remover os produtos vinculados anteriormente */
  "POST /eventos/:eventoId/produtos": {
    searchParams: {
      /**
       * Identificadores dos produtos variantes a serem vinculados ao evento desejado
       */
      produtosVariante?: {
        /**
         * Identificador do produto variante
         */
        produtoVarianteId?: number;
      }[];
    };
  };
  /** @description Atualiza lista de produtos vinculados a um evento removendo os itens vinculados anteriormente e mantendo apenas os enviados pelo request */
  "PUT /eventos/:eventoId/produtos": {
    searchParams: {
      /**
       * Identificadores dos produtos variantes a serem vinculados ao evento desejado
       */
      produtosVariante?: {
        /**
         * Identificador do produto variante
         */
        produtoVarianteId?: number;
      }[];
    };
  };
  /** @description Atualiza o status do hotsite, sendo ativo (true) ou inativo (false) */
  "PUT /hotsites/:hotsiteId/status": {
    searchParams: {
      /**
       * Status para qual o hotsite indicado deve ir
       */
      ativo?: boolean;
    };
  };
  /** @description Autenticação realizada com sucesso */
  "POST /autenticacao/login": {
    searchParams: {
      /**
       * Login do usuário (optional)
       */
      login?: string;
      /**
       * Senha do usuário (optional)
       */
      senha?: string;
    };
  };
  /** @description Parceiro encontrado */
  "GET /parceiros/:nome": {};
  /** @description Seta status do produto variante como ativo ou inativo */
  "PUT /produtos/:identificador/situacao": {
    searchParams: {
      /**
       * Define se o produto variante informado será ativo ou inativo
       */
      status?: boolean;
    };
  };
  /** @description Lista de Grupos de Personalização */
  "GET /grupospersonalizacao": {};
  /** @description Retorna o saldo de um usuário */
  "GET /contascorrentes/:email": {};
  /** @description Realiza um novo lançamento na conta corrente do cliente */
  "POST /contascorrentes/:email": {
    searchParams: {
      /**
       * Valor da conta corrente (optional)
       */
      valor?: number;
      /**
       * Tipo de Lançamento (optional)
       */
      tipoLancamento?:
        | {
          "0": "C";
          "1": "r";
          "2": "e";
          "3": "d";
          "4": "i";
          "5": "t";
          "6": "o";
        }
        | { "0": "D"; "1": "e"; "2": "b"; "3": "i"; "4": "t"; "5": "o" };
      /**
       * Observação (optional)
       */
      observacao?: string;
      /**
       * Se será visível para o cliente (optional)
       */
      visivelParaCliente?: boolean;
    };
  };
  /** @description Lista de produtos */
  "GET /resellers/produtos/:identificador": {};
  /** @description Lista de pedidos */
  "GET /pedidos/formaPagamento/:formasPagamento": {};
  /** @description Lista de pedidos */
  "GET /pedidos": {};
  /** @description Caso a loja utilize as formas de pagamento do gateway o campo "formaPagamentoId" do objeto "pagamento" deverá conter o valor "200". */
  "POST /pedidos": {
    searchParams: {
      /**
       * Id do pedido que está sendo inserido. Caso seja informado deve ser um Id disponível na loja. Caso não seja informado um Id será gerado (optional)
       */
      pedidoId?: number;
      /**
       * Id do carrinho que foi utilizado no pedido (optional)
       */
      carrinhoId?: string;
      /**
       * Define em qual situação está o pedido. A lista completa das possíveis situações se encontra no GET /situacoesPedido
       */
      situacaoPedidoId?: number;
      /**
       * Data em que o pedido foi realizado
       */
      data?: string;
      /**
       * Valor total do pedido. Se informado deve ser igual a soma de todos os valores inclusos no pedido (preços dos produtos, ajustes, frete, etc) (optional)
       */
      valorTotal?: number;
      /**
       * Informação do juros do pedido
       */
      valorJuros?: number;
      /**
       * Informação de desconto do pedido
       */
      valorDesconto?: number;
      /**
       * Id do usuário que realizou a compra. É possível recuperar o Id de um usuário no GET /usuarios
       */
      usuarioId?: number;
      /**
       * Id do endereço do usuário que deve ser utilizado como endereço de entrega. Para buscar os endereços de um usuário utilize o GET /usuarios/{usuarioId}/enderecos
       */
      enderecoId?: number;
      /**
       * Define se o pedido foi feito através de um dispositivo móvel ou não
       */
      isMobile?: boolean;
      /**
       * Id do evento ao qual o pedido está vinculado (opcional)
       */
      eventoId?: number;
      /**
       * Lista contendo os produtos do pedido
       */
      produtos?: {
        /**
         * Id do produto variante que está vinculado a esse pedido.
         */
        produtoVarianteId?: number;
        /**
         * Define a quantidade do produto, podendo ser dividida por diferentes centros de distribuição
         */
        quantidade?: {
          /**
           * Quantidade por centro de distribuição
           */
          quantidadeTotal?: number;
          /**
           * Quantidade (optional)
           */
          quantidadePorCentroDeDistribuicao?: {
            /**
             * Id do centro de distribuição
             */
            centroDistribuicaoId?: number;
            /**
             * Quantidade
             */
            quantidade?: number;
          }[];
        };
        /**
         * Preço de venda do produto, sem adição ou subtração de valores.
         */
        precoVenda?: number;
        /**
         * Define se esse produto é um brinde ou não
         */
        isBrinde?: boolean;
        /**
         * Lista contendo todos os ajustes de preço do produto
         */
        ajustes?: {
          /**
           * Define o tipo do ajuste de valor de um produto contido em um pedido. = ['Frete', 'Pricing', 'Atacarejo', 'Personalizacao', 'Embalagem', 'Promocao', 'PromocaoFrete', 'ContaCorrente', 'FormaPagamento', 'PromocaoProduto', 'TipoFreteProduto', 'Formula']stringEnum:"Frete", "Pricing", "Atacarejo", "Personalizacao", "Embalagem", "Promocao", "PromocaoFrete", "ContaCorrente", "FormaPagamento", "PromocaoProduto", "TipoFreteProduto", "Formula"
           */
          tipo?: string;
          /**
           * Define o valor do ajuste a ser aplicado no produto. O valor pode ser positivo ou negativo
           */
          valor?: number;
          /**
           * Observação (optional)
           */
          observacao?: string;
          /**
           * Nome (optional)
           */
          nome?: string;
        }[];
      }[];
      /**
       * Informações de frete do pedido
       */
      fretes?: {
        /**
         * Identificador do centro de distribuição de origem
         */
        centroDistribuicaoId?: number;
        /**
         * Identificador do contrato de frete (optional)
         */
        freteContratoId?: number;
        /**
         * Peso em gramas (g) do frete calculado (optional)
         */
        peso?: number;
        /**
         * Peso em gramas cobrado do cliente (optional)
         */
        pesoCobrado?: number;
        /**
         * Volume em metro cúbico (m³) calculado (optional)
         */
        volume?: number;
        /**
         * Volume em metro cúbico (m³) cobrado do cliente (optional)
         */
        volumeCobrado?: number;
        /**
         * Prazo do envio do frete em dias úteis
         */
        prazoEnvio?: number;
        /**
         * Valor do frete (optional)
         */
        valorFreteEmpresa?: number;
        /**
         * Valor do frete cobrado do cliente
         */
        valorFreteCliente?: number;
        /**
         * Data estimada da entrega do produto (optional)
         */
        dataEntrega?: string;
        /**
         * Informações adicionais do frete
         */
        informacoesAdicionais?: {
          /**
           * Chave
           */
          chave?: string;
          /**
           * Valor
           */
          valor?: string;
        }[];
      }[];
      /**
       * Informações de pagamento do pedido
       */
      pagamento?: {
        /**
         * Id da forma de pagamento
         */
        formaPagamentoId?: number;
        /**
         * Número parcelas
         */
        numeroParcelas?: number;
        /**
         * Valor da parcela
         */
        valorParcela?: number;
        /**
         * Informações adicionais de pagamento (optional)
         */
        informacaoAdicional?: {
          /**
           * Chave
           */
          chave?: string;
          /**
           * Valor
           */
          valor?: string;
        }[];
      };
      /**
       * ParceiroId vinculado ao pedido (optional)
       */
      canalId?: number;
      /**
       * Dados do pedido no marketplace (optional)
       */
      omniChannel?: {
        /**
         * Id do pedido que o cliente vê no momento que fecha a compra
         */
        pedidoIdPublico?: string;
        /**
         * Id interno do marketplace
         */
        pedidoIdPrivado?: string;
        /**
         * Dados do pedido no integrador
         */
        integrador?: {
          /**
           * Nome do parceiro integrador
           */
          nome?: string;
          /**
           * Numero do pedido dentro do integrador
           */
          pedidoId?: string;
          /**
           * Url do pedido dentro painel do integrador
           */
          pedidoUrl?: string;
        };
      };
      /**
       * Id da transação (optional)
       */
      transacaoId?: number;
      /**
       * Observação do pedido (optional)
       */
      observacao?: string;
      /**
       * Se um pedido é valido (optional)
       */
      valido?: boolean;
      /**
       * Cupom de desconto (optional)
       */
      cupomDesconto?: string;
      /**
       * IP da criação do pedido (optional)
       */
      ip?: string;
      /**
       * ID do usuário master que realizou o pedido, se houver (optional)
       */
      usuarioMaster?: number;
    };
  };
  /** @description Lista de portfolios */
  "GET /portfolios": {};
  /** @description Insere um novo portfolio */
  "POST /portfolios": {
    searchParams: {
      /**
       * Nome do portfolio
       */
      nome?: string;
    };
  };
  /** @description Lista de imagens vinculadas a um produtos */
  "GET /produtos/:identificador/imagens": {};
  /** @description Adiciona uma nova imagem vinculada a um produto */
  "POST /produtos/:identificador/imagens": {
    searchParams: {
      /**
       * Lista com as imagens do produto no formato base 64 (optional)
       */
      RAW_BODY?: {
        /**
         * Imagem do produto em base64
         */
        base64?: string;
        /**
         * JPG ou PNG
         */
        formato?: string;
        /**
         * Se a imagem será apresentada como miniatura
         */
        exibirMiniatura?: boolean;
        /**
         * Se a imagem será apresentada como estampa
         */
        estampa?: boolean;
        /**
         * Ordem para apresentação da imagem
         */
        ordem?: number;
      }[];
    };
  };
  /** @description Limite de crédito de um usuário específico */
  "GET /usuarios/limiteCreditoPorUsuarioId/:usuarioId": {};
  /** @description SEO do produto informado */
  "GET /produtos/:identificador/seo": {};
  /** @description Insere um SEO para um produto específico */
  "POST /produtos/:identificador/seo": {
    searchParams: {
      /**
       * Informe a URL a ser inserida na TAG Canonical. Caso nenhum dado seja inserido, a TAG Canonical não será inserida na Página do Produto (optional)
       */
      tagCanonical?: string;
      /**
       * Informe o title da página do produto (optional)
       */
      title?: string;
      /**
       * Informe os dados da Meta Tag (optional)
       */
      metaTags?: {
        /**
         * Dados da Meta Tag
         */
        content?: string;
        /**
         * Dados da Meta Tag
         */
        httpEquiv?: string;
        /**
         * Dados da Meta Tag
         */
        name?: string;
        /**
         * Dados da Meta Tag
         */
        scheme?: string;
      }[];
    };
  };
  /** @description Atualiza um SEO de um produto específico */
  "PUT /produtos/:identificador/seo": {
    searchParams: {
      /**
       * Informe a URL a ser inserida na TAG Canonical. Caso nenhum dado seja inserido, a TAG Canonical não será inserida na Página do Produto (optional)
       */
      tagCanonical?: string;
      /**
       * Informe o title da página do produto (optional)
       */
      title?: string;
      /**
       * Informe os dados da Meta Tag (optional)
       */
      metaTags?: {
        /**
         * Dados da Meta Tag
         */
        content?: string;
        /**
         * Dados da Meta Tag
         */
        httpEquiv?: string;
        /**
         * Dados da Meta Tag
         */
        name?: string;
        /**
         * Dados da Meta Tag
         */
        scheme?: string;
      }[];
    };
  };
  /** @description Deleta o SEO de um produto específico */
  "DELETE /produtos/:identificador/seo": {};
  /** @description Adiciona um vínculo entre usuário e parceiro */
  "POST /usuarios/:email/parceiro": {
    searchParams: {
      /**
       * Id do parceiro (optional)
       */
      parceiroId?: number;
      /**
       * Vinculo vitalício (optional)
       */
      vinculoVitalicio?: boolean;
      /**
       * Data inicial do vinculo entre usuário e parceiro (optional)
       */
      dataInicial?: string;
      /**
       * Data final do vinculo entre usuário e parceiro (optional)
       */
      dataFinal?: string;
    };
  };
  /** @description Atualiza um vínculo entre usuário e parceiro */
  "PUT /usuarios/:email/parceiro": {
    searchParams: {
      /**
       * Vinculo vitalício (optional)
       */
      vinculoVitalicio?: boolean;
      /**
       * Data inicial do vinculo entre usuário e parceiro (optional)
       */
      dataInicial?: string;
      /**
       * Data final do vinculo entre usuário e parceiro (optional)
       */
      dataFinal?: string;
    };
  };
  /** @description Remove o vínculo entre usuário e parceiro */
  "DELETE /usuarios/:email/parceiro": {
    searchParams: {
      /**
       * Número identificador do parceiro (Max Length: 4)
       */
      parceiroId?: number;
    };
  };
  /** @description Retorna usuário encontrado */
  "GET /usuarios/:email/enderecos": {};
  /** @description Insere um endereço para um usuário pelo e-mail */
  "POST /usuarios/:email/enderecos": {
    searchParams: {
      /**
       * Nome de identificação do endereço a ser cadastrado (Max Length: 100)
       */
      nomeEndereco?: string;
      /**
       * Nome da rua (Max Length: 500)
       */
      rua?: string;
      /**
       * Número do local (Max Length: 50)
       */
      numero?: string;
      /**
       * Complemento (Max Length: 250) (optional)
       */
      complemento?: string;
      /**
       * Referência para a localização do endereço (Max Length: 500) (optional)
       */
      referencia?: string;
      /**
       * Bairro do endereço (Max Length: 100)
       */
      bairro?: string;
      /**
       * Cidade em que se localiza o endereço (Max Length: 100)
       */
      cidade?: string;
      /**
       * O estado (Max Length: 100)
       */
      estado?: string;
      /**
       * Código do cep (Max Length: 50)
       */
      cep?: string;
    };
  };
  /** @description Atualiza um script existente */
  "PUT /gestorscripts/scripts/:scriptId": {
    searchParams: {
      /**
       * Nome do script
       */
      nome?: string;
      /**
       * Data inicial do script
       */
      dataInicial?: string;
      /**
       * Data final do script
       */
      dataFinal?: string;
      /**
       * Informe se o script está ativo ou não
       */
      ativo?: boolean;
      /**
       * Prioridade do script
       */
      prioridade?: number;
      /**
       * Posição do script
       */
      posicao?:
        | {
          "0": "H";
          "1": "e";
          "2": "a";
          "3": "d";
          "4": "e";
          "5": "r";
          "6": "P";
          "7": "r";
          "8": "i";
          "9": "m";
          "10": "e";
          "11": "i";
          "12": "r";
          "13": "a";
          "14": "L";
          "15": "i";
          "16": "n";
          "17": "h";
          "18": "a";
        }
        | {
          "0": "H";
          "1": "e";
          "2": "a";
          "3": "d";
          "4": "e";
          "5": "r";
          "6": "U";
          "7": "l";
          "8": "t";
          "9": "i";
          "10": "m";
          "11": "a";
          "12": "L";
          "13": "i";
          "14": "n";
          "15": "h";
          "16": "a";
        }
        | {
          "0": "B";
          "1": "o";
          "2": "d";
          "3": "y";
          "4": "P";
          "5": "r";
          "6": "i";
          "7": "m";
          "8": "e";
          "9": "i";
          "10": "r";
          "11": "a";
          "12": "L";
          "13": "i";
          "14": "n";
          "15": "h";
          "16": "a";
        }
        | {
          "0": "B";
          "1": "o";
          "2": "d";
          "3": "y";
          "4": "U";
          "5": "l";
          "6": "t";
          "7": "i";
          "8": "m";
          "9": "a";
          "10": "L";
          "11": "i";
          "12": "n";
          "13": "h";
          "14": "a";
        }
        | {
          "0": "F";
          "1": "o";
          "2": "o";
          "3": "t";
          "4": "e";
          "5": "r";
          "6": "P";
          "7": "r";
          "8": "i";
          "9": "m";
          "10": "e";
          "11": "i";
          "12": "r";
          "13": "a";
          "14": "L";
          "15": "i";
          "16": "n";
          "17": "h";
          "18": "a";
        }
        | {
          "0": "F";
          "1": "o";
          "2": "o";
          "3": "t";
          "4": "e";
          "5": "r";
          "6": "U";
          "7": "l";
          "8": "t";
          "9": "i";
          "10": "m";
          "11": "e";
          "12": "L";
          "13": "i";
          "14": "n";
          "15": "h";
          "16": "a";
        };
      /**
       * Tipo da página do script
       */
      tipoPagina?:
        | { "0": "T"; "1": "o"; "2": "d"; "3": "a"; "4": "s" }
        | { "0": "H"; "1": "o"; "2": "m"; "3": "e" }
        | { "0": "B"; "1": "u"; "2": "s"; "3": "c"; "4": "a" }
        | {
          "0": "C";
          "1": "a";
          "2": "t";
          "3": "e";
          "4": "g";
          "5": "o";
          "6": "r";
          "7": "i";
          "8": "a";
        }
        | {
          "0": "F";
          "1": "a";
          "2": "b";
          "3": "r";
          "4": "i";
          "5": "c";
          "6": "a";
          "7": "n";
          "8": "t";
          "9": "e";
        }
        | {
          "0": "E";
          "1": "s";
          "2": "t";
          "3": "a";
          "4": "t";
          "5": "i";
          "6": "c";
          "7": "a";
          "8": "s";
        }
        | {
          "0": "P";
          "1": "r";
          "2": "o";
          "3": "d";
          "4": "u";
          "5": "t";
          "6": "o";
        }
        | {
          "0": "C";
          "1": "a";
          "2": "r";
          "3": "r";
          "4": "i";
          "5": "n";
          "6": "h";
          "7": "o";
        };
      /**
       * Identificador da página
       */
      identificadorPagina?: string;
      /**
       * Conteúdo do script
       */
      conteudo?: string;
      /**
       * Status do script
       */
      publicado?: boolean;
    };
  };
  /** @description Exclui um Script */
  "DELETE /gestorscripts/scripts/:scriptId": {};
  /** @description Ativa ou desativa um endereço de um usuário com base no id do usuário */
  "PUT /usuarios/:usuarioId/enderecos/:enderecoId/ativar": {
    searchParams: {
      /**
       * Status do endereço
       */
      status?: boolean;
    };
  };
  /** @description Ativa ou desativa um Seller */
  "PUT /resellers/:resellerId/status": {
    searchParams: {
      /**
       * Status do seller (ativo / inativo)
       */
      ativo?: boolean;
    };
  };
  /** @description Atacarejo */
  "GET /produtos/:identificador/atacarejo/:produtoVarianteAtacadoId": {};
  /** @description Atualiza um Atacarejo */
  "PUT /produtos/:identificador/atacarejo/:produtoVarianteAtacadoId": {
    searchParams: {
      /**
       * Preço atacado (optional)
       */
      precoAtacado?: number;
      /**
       * Quantidade do produto (optional)
       */
      quantidade?: number;
    };
  };
  /** @description Remove um Atacarejo */
  "DELETE /produtos/:identificador/atacarejo/:produtoVarianteAtacadoId": {};
  /** @description Buscar todos os autores */
  "GET /autores": {};
  /** @description Inserir autor */
  "POST /autores": {
    searchParams: {
      /**
       * Nome do Autor
       */
      nome?: string;
      /**
       * Status do autor
       */
      ativo?: boolean;
    };
  };
  /** @description Lista dos estados */
  "GET /lojasFisicas/estados": {};
  /** @description Método responsável por retornar um produto específico buscando pelo seu identificador, que pode ser um sku ou produto variante. O tipo do identificador pode ser definido no campo tipoIdentificador. Também é possível informar quais informações adicionais devem ser retornadas na consulta utilizando o campo campos adicionais. */
  "GET /produtos/:identificador": {};
  /** @description Atualiza um produto com base nos dados enviados */
  "PUT /produtos/:identificador": {
    searchParams: {
      /**
       * Representa o ProdutoId agrupador por variante (optional)
       */
      idPaiExterno?: string;
      /**
       * Representa o ParentId agrupador por parent (optional)
       */
      idVinculoExterno?: string;
      /**
       * (Max Length: 50) Sku do produto
       */
      sku?: string;
      /**
       * (Max Length: 300) Nome do produto variante
       */
      nome?: string;
      /**
       * Nome do produto (pai do variante) (optional)
       */
      nomeProdutoPai?: string;
      /**
       * Tipo de exibição da matriz de atributos (optional)
       */
      exibirMatrizAtributos?:
        | { "0": "S"; "1": "i"; "2": "m" }
        | { "0": "N"; "1": "a"; "2": "o" }
        | { "0": "N"; "1": "e"; "2": "u"; "3": "t"; "4": "r"; "5": "o" };
      /**
       * Se o produto aceita contra proposta (optional)
       */
      contraProposta?: boolean;
      /**
       * (Max Length: 100) Nome do fabricante
       */
      fabricante?: string;
      /**
       * (Max Length: 500) Nome do autor (optional)
       */
      autor?: string;
      /**
       * (Max Length: 100) Nome da editora (optional)
       */
      editora?: string;
      /**
       * (Max Length: 100) Nome da coleção (optional)
       */
      colecao?: string;
      /**
       * (Max Length: 100) Nome do gênero (optional)
       */
      genero?: string;
      /**
       * Max Length: 8, "0000.0000,00") Preço de custo do produto variante (optional)
       */
      precoCusto?: number;
      /**
       * (Max Length: 8, "0000.0000,00") "Preço De" do produto variante (optional)
       */
      precoDe?: number;
      /**
       * (Max Length: 8, "0000.0000,00") "Preço Por" de venda do produto variante
       */
      precoPor?: number;
      /**
       * (Max Length: 8, "0000.0000,00") Fator multiplicador que gera o preço de exibição do produto.Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no "PrecoPor". (1 por padrão) (optional)
       */
      fatorMultiplicadorPreco?: number;
      /**
       * Prazo de entrega do produto variante (optional)
       */
      prazoEntrega?: number;
      /**
       * Define se um produto variante é valido ou não (optional)
       */
      valido?: boolean;
      /**
       * Define se um produto deve ser exibido no site (optional)
       */
      exibirSite?: boolean;
      /**
       * Define a qual regra de calculo de frete o produto vai pertencer
       */
      freteGratis?:
        | { "0": "S"; "1": "e"; "2": "m"; "3": "p"; "4": "r"; "5": "e" }
        | { "0": "N"; "1": "u"; "2": "n"; "3": "c"; "4": "a" }
        | { "0": "N"; "1": "e"; "2": "u"; "3": "t"; "4": "r"; "5": "o" }
        | {
          "0": "D";
          "1": "e";
          "2": "s";
          "3": "c";
          "4": "o";
          "5": "n";
          "6": "s";
          "7": "i";
          "8": "d";
          "9": "e";
          "10": "r";
          "11": "a";
          "12": "r";
          "13": "_";
          "14": "R";
          "15": "e";
          "16": "g";
          "17": "r";
          "18": "a";
          "19": "s";
        };
      /**
       * Define se o produto variante tem troca grátis (optional)
       */
      trocaGratis?: boolean;
      /**
       * (Max Length: 8, "0000.0000,00") Peso do produto variante, em gramas (g)
       */
      peso?: number;
      /**
       * (Max Length: 8, "0000.0000,00") Altura do produto variante, em centímetros (cm).
       */
      altura?: number;
      /**
       * (Max Length: 8, "0000.0000,00") Comprimento do produto variante, em centímetros (cm).
       */
      comprimento?: number;
      /**
       * (Max Length: 8, "0000.0000,00") Largura do produto variante, em centímetros (cm).
       */
      largura?: number;
      /**
       * Define se o produto variante tem garantia (optional)
       */
      garantia?: number;
      /**
       * Define se o produto contém televendas (optional)
       */
      isTelevendas?: boolean;
      /**
       * (Max Length: 25) EAN do produto variante (optional)
       */
      ean?: string;
      /**
       * (Max Length: 255) Localização no estoque do produto variante (optional)
       */
      localizacaoEstoque?: string;
      /**
       * Dados de atacado do produto variante (optional)
       */
      listaAtacado?: {
        /**
         * (Max Length: 8, "0000.0000,00") - Preco Por do item por atacado
         */
        precoPor?: number;
        /**
         * Quantidade para compra de atacado
         */
        quantidade?: number;
      }[];
      /**
       * Lista de estoque/centro de distribuição do produto. Obrigatório se valido for true (optional)
       */
      estoque?: {
        /**
         * Estoque físico do produto
         */
        estoqueFisico?: number;
        /**
         * Estoque reservado do produto
         */
        estoqueReservado?: number;
        /**
         * Id do centro de distribuição do estoque do produto
         */
        centroDistribuicaoId?: number;
        /**
         * Quantidade para ativar o alerta de estoque
         */
        alertaEstoque?: number;
      }[];
      /**
       * Lista de atributos do produto
       */
      listaAtributos?: {
        /**
         * (Max Length: 100) - Define o nome do atributo
         */
        nome?: string;
        /**
         * (Max Length: 8, "0000.0000,00") - Define o valor do atributo
         */
        valor?: string;
        /**
         * Define se o atributo deverá ser exibido
         */
        exibir?: boolean;
      }[];
      /**
       * Quantidade máxima de compra do produto variante (optional)
       */
      quantidadeMaximaCompraUnidade?: number;
      /**
       * Quantidade mínima de compra do produto variante (optional)
       */
      quantidadeMinimaCompraUnidade?: number;
      /**
       * Condição do produto variante (optional)
       */
      condicao?:
        | { "0": "N"; "1": "o"; "2": "v"; "3": "o" }
        | { "0": "U"; "1": "s"; "2": "a"; "3": "d"; "4": "o" }
        | {
          "0": "R";
          "1": "e";
          "2": "n";
          "3": "o";
          "4": "v";
          "5": "a";
          "6": "d";
          "7": "o";
        }
        | {
          "0": "D";
          "1": "a";
          "2": "n";
          "3": "i";
          "4": "f";
          "5": "i";
          "6": "c";
          "7": "a";
          "8": "d";
          "9": "o";
        };
      /**
       * Url do vídeo do Produto (optional)
       */
      urlVideo?: string;
      /**
       * Se o produto aparece no Spot (optional)
       */
      spot?: boolean;
      /**
       * Se o produto aparece na Url (optional)
       */
      paginaProduto?: boolean;
      /**
       * Se o produto aparece no Marketplace (optional)
       */
      marketplace?: boolean;
      /**
       * Se o produto aparece somente nos Parceiros
       */
      somenteParceiros?: boolean;
      /**
       * Se o produto deve ser agrupado pelo EAN (optional)
       */
      buyBox?: boolean;
      /**
       * Prazo de validade ou consumo do produto (optional)
       */
      prazoValidade?: number;
      /**
       * Dados de consumo de produto e se deve enviar os dias de consumo por e-mail (optional)
       */
      consumo?: {
        /**
         * Quantidade de Dias (optional)
         */
        quantidadeDias?: number;
        /**
         * Enviar e-mail (optional)
         */
        enviarEmail?: boolean;
      };
    };
  };
  /** @description Lista de versões */
  "GET /gestorscripts/scripts/:scriptId/versoes": {};
  /** @description Insere uma versão para um script existente */
  "POST /gestorscripts/scripts/:scriptId/versoes": {
    searchParams: {
      /**
       * Identificador da página
       */
      identificadorPagina?: string;
      /**
       * Conteúdo do script
       */
      conteudo?: string;
      /**
       * Status do script
       */
      publicado?: boolean;
    };
  };
  /** @description Reseller específico */
  "GET /resellers/token": {};
  /** @description Categoria encontrada */
  "GET /categorias/erp/:id": {};
  /** @description Atualiza uma categoria utilizando o id do erp como identificador */
  "PUT /categorias/erp/:id": {
    searchParams: {
      /**
       * Nome da categoria (optional)
       */
      nome?: string;
      /**
       * Id da categoria pai (optional)
       */
      categoriaPaiId?: number;
      /**
       * Id da categoria ERP (optional)
       */
      categoriaERPId?: string;
      /**
       * Categoria ativo/inativo (optional)
       */
      ativo?: boolean;
      /**
       * Categoria de reseller (optional)
       */
      isReseller?: boolean;
      /**
       * Exibir Matriz de Atributos (optional)
       */
      exibirMatrizAtributos?:
        | { "0": "S"; "1": "i"; "2": "m" }
        | { "0": "N"; "1": "a"; "2": "o" }
        | { "0": "N"; "1": "e"; "2": "u"; "3": "t"; "4": "r"; "5": "o" };
      /**
       * Informe a quantidade máxima permitida para compra por produtos desta categoria. Informe zero para assumir a configuração geral da loja (optional)
       */
      quantidadeMaximaCompraUnidade?: number;
      /**
       * Informe o valor mínimo para compra em produtos desta categoria (optional)
       */
      valorMinimoCompra?: number;
      /**
       * Informe se será exibida no menu (optional)
       */
      exibeMenu?: boolean;
    };
  };
  /** @description Categoria excluída com sucesso */
  "DELETE /categorias/erp/:id": {};
  /** @description Templates */
  "GET /templates": {};
  /** @description Lista de usuários */
  "GET /usuarios": {};
  /** @description Insere um novo usuário */
  "POST /usuarios": {
    searchParams: {
      /**
       * Tipo de pessoa
       */
      tipoPessoa?:
        | { "0": "F"; "1": "i"; "2": "s"; "3": "i"; "4": "c"; "5": "a" }
        | {
          "0": "J";
          "1": "u";
          "2": "r";
          "3": "i";
          "4": "d";
          "5": "i";
          "6": "c";
          "7": "a";
        };
      /**
       * Origem do contato
       */
      origemContato?:
        | { "0": "G"; "1": "o"; "2": "o"; "3": "g"; "4": "l"; "5": "e" }
        | { "0": "B"; "1": "i"; "2": "n"; "3": "g" }
        | { "0": "J"; "1": "o"; "2": "r"; "3": "n"; "4": "a"; "5": "l" }
        | {
          "0": "P";
          "1": "a";
          "2": "t";
          "3": "r";
          "4": "o";
          "5": "c";
          "6": "i";
          "7": "n";
          "8": "i";
          "9": "o";
          "10": "E";
          "11": "s";
          "12": "p";
          "13": "o";
          "14": "r";
          "15": "t";
          "16": "i";
          "17": "v";
          "18": "o";
        }
        | {
          "0": "R";
          "1": "e";
          "2": "c";
          "3": "o";
          "4": "m";
          "5": "e";
          "6": "n";
          "7": "d";
          "8": "a";
          "9": "c";
          "10": "a";
          "11": "o";
          "12": "A";
          "13": "l";
          "14": "g";
          "15": "u";
          "16": "e";
          "17": "m";
        }
        | {
          "0": "R";
          "1": "e";
          "2": "v";
          "3": "i";
          "4": "s";
          "5": "t";
          "6": "a";
        }
        | {
          "0": "S";
          "1": "i";
          "2": "t";
          "3": "e";
          "4": "I";
          "5": "n";
          "6": "t";
          "7": "e";
          "8": "r";
          "9": "n";
          "10": "e";
          "11": "t";
        }
        | {
          "0": "T";
          "1": "e";
          "2": "l";
          "3": "e";
          "4": "v";
          "5": "i";
          "6": "s";
          "7": "a";
          "8": "o";
        }
        | { "0": "O"; "1": "u"; "2": "t"; "3": "r"; "4": "o" }
        | {
          "0": "U";
          "1": "s";
          "2": "u";
          "3": "a";
          "4": "r";
          "5": "i";
          "6": "o";
          "7": "I";
          "8": "m";
          "9": "p";
          "10": "o";
          "11": "r";
          "12": "t";
          "13": "a";
          "14": "d";
          "15": "o";
          "16": "V";
          "17": "i";
          "18": "a";
          "19": "A";
          "20": "d";
          "21": "m";
          "22": "i";
          "23": "n";
        }
        | {
          "0": "P";
          "1": "a";
          "2": "y";
          "3": "P";
          "4": "a";
          "5": "l";
          "6": "E";
          "7": "x";
          "8": "p";
          "9": "r";
          "10": "e";
          "11": "s";
          "12": "s";
        };
      /**
       * Tipo Sexo (optional)
       */
      tipoSexo?:
        | {
          "0": "U";
          "1": "n";
          "2": "d";
          "3": "e";
          "4": "f";
          "5": "i";
          "6": "n";
          "7": "e";
          "8": "d";
        }
        | {
          "0": "M";
          "1": "a";
          "2": "s";
          "3": "c";
          "4": "u";
          "5": "l";
          "6": "i";
          "7": "n";
          "8": "o";
        }
        | {
          "0": "F";
          "1": "e";
          "2": "m";
          "3": "i";
          "4": "n";
          "5": "i";
          "6": "n";
          "7": "o";
        };
      /**
       * Nome do usuário (Max Length: 100)
       */
      nome?: string;
      /**
       * CPF do usuário caso seja pessoa física (Max Length: 50) (optional)
       */
      cpf?: string;
      /**
       * E-mail do usuário (Max Length: 100)
       */
      email?: string;
      /**
       * RG do usuário caso seja pessoa física (Max Length: 50) (optional)
       */
      rg?: string;
      /**
       * Telefone residencial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50)
       */
      telefoneResidencial?: string;
      /**
       * Telefone celular do usuário. Deve ser informado o DDD junto ao número (Max Length: 50) (optional)
       */
      telefoneCelular?: string;
      /**
       * Telefone comercial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50) (optional)
       */
      telefoneComercial?: string;
      /**
       * Data de nascimento (optional)
       */
      dataNascimento?: string;
      /**
       * Razão social do usuário, caso seja uma pessoa jurídica(Max Length: 100) (optional)
       */
      razaoSocial?: string;
      /**
       * CNPJ do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
       */
      cnpj?: string;
      /**
       * Inscrição estadual do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
       */
      inscricaoEstadual?: string;
      /**
       * Responsável(Max Length: 100) (optional)
       */
      responsavel?: string;
      /**
       * Data de criação do cadastro (optional)
       */
      dataCriacao?: string;
      /**
       * Data de atualização do cadastro (optional)
       */
      dataAtualizacao?: string;
      /**
       * Se o usuário é revendedor (optional)
       */
      revendedor?: boolean;
      /**
       * Informação cadastral (optional)
       */
      listaInformacaoCadastral?: {
        /**
         * Chave
         */
        chave?: string;
        /**
         * Valor
         */
        valor?: string;
      }[];
      /**
       * Avatar (Max Length: 50) (optional)
       */
      avatar?: string;
      /**
       * IP do usuário (Max Length: 20) (optional)
       */
      ip?: string;
      /**
       * Seta ou retorna o valor de Aprovado (optional)
       */
      aprovado?: boolean;
    };
  };
  /** @description Dados da loja */
  "GET /loja": {};
  /** @description Indicadores de Faturamento */
  "GET /dashboard/faturamento": {};
  /** @description Grupo de assinatura */
  "GET /assinaturas/grupoassinatura": {};
  /** @description Lista de pedidos */
  "GET /pedidos/:pedidoId/rastreamento": {};
  /** @description Insere um rastreamento e status a um pedido */
  "POST /pedidos/:pedidoId/rastreamento": {
    searchParams: {
      /**
       * Id da situação do pedido
       */
      situacaoPedidoId?: number;
      /**
       * Id do centro de distribuição
       */
      centroDistribuicaoId?: number;
      /**
       * Rastreamento (optional)
       */
      rastreamento?: string;
      /**
       * Data do pedido (optional)
       */
      dataEvento?: string;
      /**
       * Número da nota fiscal (optional)
       */
      numeroNotaFiscal?: string;
      /**
       * Chave acesso NFE (optional)
       */
      chaveAcessoNFE?: string;
      /**
       * URL NFE (optional)
       */
      urlNFE?: string;
      /**
       * Serie NFE (optional)
       */
      serieNFE?: string;
      /**
       * CFOP (optional)
       */
      cfop?: string;
      /**
       * URL Rastreamento (optional)
       */
      urlRastreamento?: string;
    };
  };
  /** @description Atualiza a data de entrega do pedido */
  "PUT /pedidos/:pedidoId/rastreamento": {
    searchParams: {
      /**
       * Objeto com os dados do rastreamento
       */
      RAW_BODY?: {
        /**
         * Código de verificação do transporte do produto
         */
        rastreamento?: string;
        /**
         * Data que a entrega foi realizada
         */
        dataEntrega?: string;
      };
    };
  };
  /** @description Rastreamento de produto encontrado */
  "GET /pedidos/:pedidoId/produtos/:produtoVarianteId/rastreamento/:pedidoRastreamentoProdutoId":
    {};
  /** @description Atualiza rastreamento de produto completo (com os dados da N.F.) */
  "PUT /pedidos/:pedidoId/produtos/:produtoVarianteId/rastreamento/:pedidoRastreamentoProdutoId":
    {
      searchParams: {
        /**
         * Nota Fiscal
         */
        notaFiscal?: string;
        /**
         * CFOP
         */
        cfop?: number;
        /**
         * Data Enviado
         */
        dataEnviado?: string;
        /**
         * Chave de acesso NFE
         */
        chaveAcessoNFE?: string;
        /**
         * Rastreamento (optional)
         */
        rastreamento?: string;
        /**
         * URL de rastreamento (optional)
         */
        urlRastreamento?: string;
        /**
         * Transportadora (optional)
         */
        transportadora?: string;
        /**
         * Data da entrega (optional)
         */
        dataEntrega?: string;
      };
    };
  /** @description Lista de detalhes de frete */
  "GET /fretes/:freteId/detalhes": {};
  /** @description Insere um novo detalhe de frete vinculado a um contrato de frete */
  "POST /fretes/:freteId/detalhes": {
    searchParams: {
      /**
       * Informe o cep inicial (optional)
       */
      cepInicial?: number;
      /**
       * Informe o cep final (optional)
       */
      cepFinal?: number;
      /**
       * Variações de detalhe do frete (optional)
       */
      variacoesFreteDetalhe?: {
        /**
         * Informe o peso inicial
         */
        pesoInicial?: number;
        /**
         * Informe o peso final
         */
        pesoFinal?: number;
        /**
         * Informe o valor do frete
         */
        valorFrete?: number;
        /**
         * Informe o prazo de entrega
         */
        prazoEntrega?: number;
        /**
         * Informe o valor preço
         */
        valorPreco?: number;
        /**
         * Informe o valor peso
         */
        valorPeso?: number;
      }[];
    };
  };
  /** @description Exclui os detalhes de um contrato de frete */
  "DELETE /fretes/:freteId/detalhes": {};
  /** @description Pedido encontrado */
  "GET /pedidos/:pedidoId": {};
  /** @description Lista de identificadores de conteúdos vinculados ao hotsite */
  "GET /hotsites/:hotsiteId/conteudos": {};
  /** @description Vincula um ou mais conteúdos a um hotsite específico */
  "POST /hotsites/:hotsiteId/conteudos": {
    searchParams: {
      /**
       * Lista de identificadores de conteúdos a serem vinculados
       */
      RAW_BODY?: {
        /**
         * Identificador do conteúdo
         */
        conteudoId?: number;
      }[];
    };
  };
  /** @description Desvincula um ou mais conteúdos de um hotsite específico */
  "DELETE /hotsites/:hotsiteId/conteudos": {
    searchParams: {
      /**
       * Lista de identificadores de conteúdos a serem desvinculados
       */
      conteudos?: {
        /**
         * Identificador do conteúdo
         */
        conteudoId?: number;
      }[];
    };
  };
  /** @description Atualiza um campo de cadastro personalizado pelo id */
  "PUT /usuarios/camposcadastropersonalizado/:camposcadastropersonalizadoId": {
    searchParams: {
      /**
       * Nome do campo (optional)
       */
      nome?: string;
      /**
       * Se o campo será obrigatório (optional)
       */
      obrigatorio?: boolean;
      /**
       * Ordem (optional)
       */
      ordem?: number;
    };
  };
  /** @description Remove um campo de cadastro personalizado */
  "DELETE /usuarios/camposcadastropersonalizado/:camposcadastropersonalizadoId":
    {};
  /** @description Dados do serviço de frete do pedido */
  "GET /pedidos/:pedidoId/frete": {};
  /** @description Tabela de preços específica */
  "GET /tabelaPrecos/:tabelaPrecoId": {};
  /** @description Atualiza uma tabela de preços */
  "PUT /tabelaPrecos/:tabelaPrecoId": {
    searchParams: {
      /**
       * Nome da tabela de preço
       */
      nome?: string;
      /**
       * Data que inicia a tabela de preço
       */
      dataInicial?: string;
      /**
       * Data de término da tabela de preço
       */
      dataFinal?: string;
      /**
       * Status da tabela de preço
       */
      ativo?: boolean;
    };
  };
  /** @description Exclui uma tabela de preços */
  "DELETE /tabelaPrecos/:tabelaPrecoId": {};
  /** @description Último status do pedido */
  "GET /pedidos/:pedidoId/status": {};
  /** @description Atualiza a situação do status do pedido */
  "PUT /pedidos/:pedidoId/status": {
    searchParams: {
      /**
       * Id da situação do pedido
       */
      RAW_BODY?: {
        /**
         * Id da situação do pedido
         */
        id?: number;
      };
    };
  };
  /** @description Lista de Tópicos */
  "GET /webhook/Topicos": {};
  /** @description Seta o pedido como integrado */
  "POST /pedidos/complete": {
    searchParams: {
      /**
       * Pedido que se deseja inserir o "complete"
       */
      RAW_BODY?: {
        /**
         * Id do pedido
         */
        pedidoId?: number;
      };
    };
  };
  /** @description Portfolio encontrado */
  "GET /portfolios/:portfolioId": {};
  /** @description Atualiza um portfolio */
  "PUT /portfolios/:portfolioId": {
    searchParams: {
      /**
       * Nome do portfolio
       */
      nome?: string;
    };
  };
  /** @description Deleta um portfolio */
  "DELETE /portfolios/:portfolioId": {};
  /** @description Retorna se o produto variante está disponível ou não */
  "GET /produtos/:identificador/disponibilidade": {};
  /** @description Lista de formas de pagamento */
  "GET /formasPagamento": {};
  /** @description Lista de pedidos */
  "GET /pedidos/:pedidoId/rastreamento/produtos": {};
  /** @description Altera o status de um portfolio */
  "PUT /portfolios/:portfolioId/status": {
    searchParams: {
      /**
       * Status do portfolio: true ou false
       */
      RAW_BODY?: {
        /**
         * Novo status do portfolio
         */
        ativo?: boolean;
      };
    };
  };
  /** @description Limite de crédito que estão vinculados aos usuários */
  "GET /usuarios/limiteCredito": {};
  /** @description Exclui uma imagem de um produto */
  "DELETE /produtos/:identificador/imagens/:id": {};
  /** @description Extrato retornado com sucesso */
  "GET /contascorrentes/:email/extrato": {};
  /** @description Lista de observações de um pedido */
  "GET /pedidos/:pedidoId/observacao": {};
  /** @description Insere uma observação a um pedido */
  "POST /pedidos/:pedidoId/observacao": {
    searchParams: {
      /**
       * Objeto com os dados da observação (optional)
       */
      RAW_BODY?: {
        /**
         * Texto da observação
         */
        observacao?: string;
        /**
         * Nome do usuário que está inserindo a observação
         */
        usuario?: string;
        /**
         * Se a observação é publica ou privada
         */
        publica?: boolean;
      };
    };
  };
  /** @description Lista de centros de distribuição */
  "GET /centrosdistribuicao": {};
  /** @description Lista de avaliações de produtos */
  "GET /produtoavaliacao": {};
  /** @description Conteúdo encontrado */
  "GET /conteudos/:conteudoId": {};
  /** @description Atualiza um conteúdo */
  "PUT /conteudos/:conteudoId": {
    searchParams: {
      /**
       * Titulo do conteúdo
       */
      titulo?: string;
      /**
       * Conteúdo ativo/inativo
       */
      ativo?: boolean;
      /**
       * Data de inicio de exibição do conteúdo (optional)
       */
      dataInicio?: string;
      /**
       * Data de final de exibição do conteúdo (optional)
       */
      dataFim?: string;
      /**
       * Posicionamento do conteúdo
       */
      posicionamento?:
        | { "0": "T"; "1": "o"; "2": "p"; "3": "o" }
        | { "0": "C"; "1": "e"; "2": "n"; "3": "t"; "4": "r"; "5": "o" }
        | { "0": "R"; "1": "o"; "2": "d"; "3": "a"; "4": "p"; "5": "e" }
        | {
          "0": "L";
          "1": "a";
          "2": "t";
          "3": "e";
          "4": "r";
          "5": "a";
          "6": "l";
          "7": "D";
          "8": "i";
          "9": "r";
          "10": "e";
          "11": "i";
          "12": "t";
          "13": "a";
        }
        | {
          "0": "L";
          "1": "a";
          "2": "t";
          "3": "e";
          "4": "r";
          "5": "a";
          "6": "l";
          "7": "E";
          "8": "s";
          "9": "q";
          "10": "u";
          "11": "e";
          "12": "r";
          "13": "d";
          "14": "a";
        }
        | {
          "0": "M";
          "1": "o";
          "2": "b";
          "3": "i";
          "4": "l";
          "5": "e";
          "6": "T";
          "7": "o";
          "8": "p";
          "9": "o";
        }
        | {
          "0": "M";
          "1": "o";
          "2": "b";
          "3": "i";
          "4": "l";
          "5": "e";
          "6": "R";
          "7": "o";
          "8": "d";
          "9": "a";
          "10": "p";
          "11": "e";
        };
      /**
       * Informações do conteúdo
       */
      conteudo?: string;
      /**
       * Insira em qual Termo de Busca o Conteúdo será exibido (optional)
       */
      termoBusca?: string;
      /**
       * Exibição do conteúdo nas buscas
       */
      exibeTodasBuscas?: boolean;
      /**
       * Não exibição do conteúdo nas buscas
       */
      naoExibeBuscas?: boolean;
      /**
       * Exibição do conteúdo nos hotsites
       */
      exibeTodosHotsites?: boolean;
      /**
       * Insira quais Hotsites que o Conteúdo será exibido (optional)
       */
      hotsiteId?: number[];
    };
  };
  /** @description Atualiza o status do tipo de evento, ativando-o ou inativando-o */
  "PUT /tiposEvento/:tipoEventoId/AlterarStatus": {};
  /** @description Lista de produtos variantes vinculados aos tipo de evento */
  "GET /tiposEvento/:tipoEventoId/produtos": {};
  /** @description Lista de resposta para cada produto vinculado */
  "POST /tiposEvento/:tipoEventoId/produtos": {
    searchParams: {
      /**
       * Identificadores dos produtos variantes a serem vinculados ao tipo evento desejado
       */
      produtos?: {
        /**
         * Identificador do produto variante
         */
        produtoVarianteId?: number;
      }[];
    };
  };
  /** @description Atualiza os produtos sugeridos de um tipo de evento */
  "PUT /tiposEvento/:tipoEventoId/produtos": {
    searchParams: {
      /**
       * Identificadores dos produtos variantes a serem vinculados ao tipo evento desejado
       */
      produtos?: {
        /**
         * Identificador do produto variante
         */
        produtoVarianteId?: number;
      }[];
    };
  };
  /** @description Atualiza a ativação automática de produtos de um Seller */
  "PUT /resellers/:resellerId/ativacaoAutomaticaProdutos": {
    searchParams: {
      /**
       * Status da ativação automática de produtos
       */
      ativo?: boolean;
    };
  };
  /** @description Gráfico Forma de Pagamento */
  "GET /dashboard/graficoformapagamento": {};
  /** @description Lista de números de pedidos ainda não integrados */
  "GET /pedidos/naoIntegrados": {};
  /** @description Dados da lista de desejos de um usuário */
  "GET /usuarios/:usuarioId/listaDesejos": {};
  /** @description Usuários encontrados */
  "GET /parceiros/:nome/usuarios": {};
  /** @description Indicador dos Novos Compradores */
  "GET /dashboard/novoscompradores": {};
  /** @description Lista de produtos variantes vinculados aos tipo de evento */
  "GET /eventos": {};
  /** @description Cria um Novo Evento */
  "POST /eventos": {
    searchParams: {
      /**
       * Identificador do tipo de evento
       */
      tipoEventoId?: number;
      /**
       * Identificador do endereço de entrega
       */
      enderecoEntregaId?: number;
      /**
       * Titulo do evento
       */
      titulo?: string;
      /**
       * URL do evento
       */
      url?: string;
      /**
       * Data do Evento
       */
      data?: string;
      /**
       * Email do usuário
       */
      usuarioEmail?: string;
      /**
       * Disponibilidade do evento (optional)
       */
      disponivel?: boolean;
      /**
       * Quantos dias antes do evento ele será exibido (optional)
       */
      diasAntesEvento?: number;
      /**
       * Até quantos dias depois do evento ele será exibido (optional)
       */
      diasDepoisEvento?: number;
      /**
       * Url do Logo. (Base64)
       */
      urlLogo?: string;
      /**
       * Url da Capa. (Base64)
       */
      urlCapa?: string;
      /**
       * Quem é o proprietário
       */
      proprietario?: string;
      /**
       * Se a aba de informação 01 será habilitada
       */
      abaInfo01Habilitado?: boolean;
      /**
       * Texto para o campo informação 01 (optional)
       */
      textoInfo01?: string;
      /**
       * Conteúdo para o campo informação 01 (optional)
       */
      conteudoInfo01?: string;
      /**
       * Se a aba de informação 02 será habilitada
       */
      abaInfo02Habilitado?: boolean;
      /**
       * Texto para o campo informação 02 (optional)
       */
      textoInfo02?: string;
      /**
       * Conteúdo para o campo informação 02 (optional)
       */
      conteudoInfo02?: string;
      /**
       * Se a aba de mensagem será habilitada (optional)
       */
      abaMensagemHabilitado?: boolean;
      /**
       * Tipo de lista de presente
       */
      enumTipoListaPresenteId?:
        | {
          "0": "L";
          "1": "i";
          "2": "s";
          "3": "t";
          "4": "a";
          "5": "P";
          "6": "r";
          "7": "o";
          "8": "n";
          "9": "t";
          "10": "a";
        }
        | {
          "0": "L";
          "1": "i";
          "2": "s";
          "3": "t";
          "4": "a";
          "5": "M";
          "6": "a";
          "7": "n";
          "8": "u";
          "9": "a";
          "10": "l";
        };
      /**
       * Tipo de entrega
       */
      enumTipoEntregaId?:
        | {
          "0": "E";
          "1": "n";
          "2": "t";
          "3": "r";
          "4": "e";
          "5": "g";
          "6": "a";
          "7": "A";
          "8": "g";
          "9": "e";
          "10": "n";
          "11": "d";
          "12": "a";
          "13": "d";
          "14": "a";
        }
        | {
          "0": "E";
          "1": "n";
          "2": "t";
          "3": "r";
          "4": "e";
          "5": "g";
          "6": "a";
          "7": "C";
          "8": "o";
          "9": "n";
          "10": "f";
          "11": "o";
          "12": "r";
          "13": "m";
          "14": "e";
          "15": "C";
          "16": "o";
          "17": "m";
          "18": "p";
          "19": "r";
          "20": "a";
          "21": "R";
          "22": "e";
          "23": "a";
          "24": "l";
          "25": "i";
          "26": "z";
          "27": "a";
          "28": "d";
          "29": "a";
        }
        | { "0": "T"; "1": "o"; "2": "d"; "3": "o"; "4": "s" }
        | { "0": "N"; "1": "e"; "2": "n"; "3": "h"; "4": "u"; "5": "m" };
      /**
       * Seleção de produto no evento
       */
      eventoProdutoSelecionado?: {
        /**
         * Id do produto variante
         */
        produtoVarianteId?: number;
        /**
         * Se produto recebido fora da lista (optional)
         */
        recebidoForaLista?: boolean;
        /**
         * Se produto removido (optional)
         */
        removido?: boolean;
      }[];
      /**
       * Endereço do Evento
       */
      enderecoEvento?: {
        /**
         * Nome para identificação do endereço
         */
        nome?: string;
        /**
         * Endereço
         */
        endereco?: string;
        /**
         * Cep do endereço
         */
        cep?: string;
        /**
         * Numero do endereço
         */
        numero?: string;
        /**
         * Bairro do endereço
         */
        bairro?: string;
        /**
         * Cidade do endereço
         */
        cidade?: string;
        /**
         * Estado do endereço
         */
        estado?: string;
      }[];
    };
  };
  /** @description Retorna todas as informações de um produto específico */
  "GET /produtos/:identificador/informacoes": {};
  /** @description Adiciona uma nova informação */
  "POST /produtos/:identificador/informacoes": {
    searchParams: {
      /**
       * Titulo da informação (optional)
       */
      titulo?: string;
      /**
       * Texto da informação (optional)
       */
      texto?: string;
      /**
       * Informação se o produto variante está visível no site.
       */
      exibirSite?: boolean;
      /**
       * Tipo de informação do produto (optional)
       */
      tipoInformacao?:
        | {
          "0": "I";
          "1": "n";
          "2": "f";
          "3": "o";
          "4": "r";
          "5": "m";
          "6": "a";
          "7": "c";
          "8": "o";
          "9": "e";
          "10": "s";
        }
        | {
          "0": "B";
          "1": "e";
          "2": "n";
          "3": "e";
          "4": "f";
          "5": "i";
          "6": "c";
          "7": "i";
          "8": "o";
          "9": "s";
        }
        | {
          "0": "E";
          "1": "s";
          "2": "p";
          "3": "e";
          "4": "c";
          "5": "i";
          "6": "f";
          "7": "i";
          "8": "c";
          "9": "a";
          "10": "c";
          "11": "o";
          "12": "e";
          "13": "s";
        }
        | {
          "0": "D";
          "1": "a";
          "2": "d";
          "3": "o";
          "4": "s";
          "5": "T";
          "6": "e";
          "7": "c";
          "8": "n";
          "9": "i";
          "10": "c";
          "11": "o";
          "12": "s";
        }
        | {
          "0": "C";
          "1": "o";
          "2": "m";
          "3": "p";
          "4": "o";
          "5": "s";
          "6": "i";
          "7": "c";
          "8": "a";
          "9": "o";
        }
        | {
          "0": "M";
          "1": "o";
          "2": "d";
          "3": "o";
          "4": "D";
          "5": "e";
          "6": "U";
          "7": "s";
          "8": "a";
          "9": "r";
        }
        | {
          "0": "C";
          "1": "u";
          "2": "i";
          "3": "d";
          "4": "a";
          "5": "d";
          "6": "o";
          "7": "s";
        }
        | {
          "0": "I";
          "1": "t";
          "2": "e";
          "3": "n";
          "4": "s";
          "5": "I";
          "6": "n";
          "7": "c";
          "8": "l";
          "9": "u";
          "10": "s";
          "11": "o";
          "12": "s";
        }
        | { "0": "D"; "1": "i"; "2": "c"; "3": "a"; "4": "s" }
        | { "0": "V"; "1": "i"; "2": "d"; "3": "e"; "4": "o" }
        | {
          "0": "D";
          "1": "e";
          "2": "s";
          "3": "c";
          "4": "r";
          "5": "i";
          "6": "c";
          "7": "a";
          "8": "o";
        }
        | {
          "0": "V";
          "1": "a";
          "2": "l";
          "3": "o";
          "4": "r";
          "5": "R";
          "6": "e";
          "7": "f";
          "8": "e";
          "9": "r";
          "10": "e";
          "11": "n";
          "12": "t";
          "13": "e";
        }
        | {
          "0": "P";
          "1": "o";
          "2": "p";
          "3": "U";
          "4": "p";
          "5": "R";
          "6": "e";
          "7": "f";
          "8": "e";
          "9": "r";
          "10": "e";
          "11": "n";
          "12": "t";
          "13": "e";
        }
        | {
          "0": "P";
          "1": "r";
          "2": "e";
          "3": "s";
          "4": "c";
          "5": "r";
          "6": "i";
          "7": "c";
          "8": "a";
          "9": "o";
        }
        | {
          "0": "T";
          "1": "a";
          "2": "b";
          "3": "e";
          "4": "l";
          "5": "a";
          "6": "D";
          "7": "e";
          "8": "M";
          "9": "e";
          "10": "d";
          "11": "i";
          "12": "d";
          "13": "a";
          "14": "s";
        }
        | { "0": "S"; "1": "p"; "2": "o"; "3": "t" }
        | {
          "0": "S";
          "1": "i";
          "2": "n";
          "3": "o";
          "4": "p";
          "5": "s";
          "6": "e";
        }
        | {
          "0": "C";
          "1": "a";
          "2": "r";
          "3": "r";
          "4": "i";
          "5": "n";
          "6": "h";
          "7": "o";
        };
    };
  };
  /** @description Indicador do Carrinho Abandonado */
  "GET /dashboard/carrinhoabandonado": {};
  /** @description Lista de Metatags do produto informado */
  "GET /produtos/:identificador/seo/metaTag": {};
  /** @description Insere um ou mais metatags para um produto */
  "POST /produtos/:identificador/seo/metaTag": {
    searchParams: {
      /**
       * Lista de metatags (optional)
       */
      metas?: {
        /**
         * Dados da Meta Tag
         */
        content?: string;
        /**
         * Dados da Meta Tag
         */
        httpEquiv?: string;
        /**
         * Dados da Meta Tag
         */
        name?: string;
        /**
         * Dados da Meta Tag
         */
        scheme?: string;
      }[];
    };
  };
  /** @description Deleta um ou mais Metatags de produto */
  "DELETE /produtos/:identificador/seo/metaTag": {
    searchParams: {
      /**
       * Lista de identificadores de metatags (optional)
       */
      metatags?: {
        /**
         * Identificador do MetaTag
         */
        metatagId?: number;
      }[];
    };
  };
  /** @description Frete encontrado */
  "GET /fretes/:freteId": {};
  /** @description Frete atualizado com sucesso */
  "PUT /fretes/:freteId": {
    searchParams: {
      /**
       * Nome do contrato de frete (optional)
       */
      nome?: string;
      /**
       * Status do contrato de frete (optional)
       */
      ativo?: boolean;
      /**
       * Volume máximo permitido, em metro cúbico (m³). (optional)
       */
      volumeMaximo?: number;
      /**
       * Informe o peso cubado. Altura x largura x profundidade x fator de cubagem. (optional)
       */
      pesoCubado?: number;
      /**
       * Id da configuração entrega agendada (optional)
       */
      entregaAgendadaConfiguracaoId?: number;
      /**
       * URL rastreamento (optional)
       */
      linkRastreamento?: string;
      /**
       * Contrato é exclusivo assinatura (optional)
       */
      ehAssinatura?: boolean;
      /**
       * Informe a largura máxima, em centímetros (cm). (optional)
       */
      larguraMaxima?: number;
      /**
       * Informe a altura máxima, em centímetros (cm). (optional)
       */
      alturaMaxima?: number;
      /**
       * Informe o comprimento máximo, em centímetros (cm). (optional)
       */
      comprimentoMaximo?: number;
      /**
       * Informe a soma das três dimensões (Largura + Altura + Comprimento), em centímetros (cm). (optional)
       */
      limiteMaximoDimensoes?: number;
      /**
       * Informe o limite de peso cubado, em gramas (g). (optional)
       */
      limitePesoCubado?: number;
      /**
       * Informe quantos dias no mínimo esse contrato de frete leva para ser enviado ao cliente (optional)
       */
      tempoMinimoDespacho?: number;
      /**
       * Informe o Id do centro de distribuição (optional)
       */
      centroDistribuicaoId?: number;
      /**
       * Informe o valor mínimo em produtos necessário para disponibilidade da tabela de frete (optional)
       */
      valorMinimoProdutos?: number;
    };
  };
  /** @description Relatório de transações de um determinado período */
  "GET /dashboard/transacoes": {};
  /** @description Lista de produtos de uma tabela de preços */
  "GET /tabelaPrecos/:tabelaPrecoId/produtos": {};
  /** @description Inseri uma lista de produto variantes em uma tabela de preços */
  "POST /tabelaPrecos/:tabelaPrecoId/produtos": {
    searchParams: {
      /**
       * Lista de produtos variantes
       */
      RAW_BODY?: {
        /**
         * SKU do produto
         */
        sku?: string;
        /**
         * Preço De do produto
         */
        precoDe?: number;
        /**
         * Preço Por do produto
         */
        precoPor?: number;
      }[];
    };
  };
  /** @description Lista com o retorno do processamento dos produtos enviados */
  "PUT /tabelaPrecos/:tabelaPrecoId/produtos": {
    searchParams: {
      /**
       * Lista de produtos variantes
       */
      RAW_BODY?: {
        /**
         * SKU do produto
         */
        sku?: string;
        /**
         * Preço De do produto
         */
        precoDe?: number;
        /**
         * Preço Por do produto
         */
        precoPor?: number;
      }[];
    };
  };
  /** @description Lista de scripts */
  "GET /gestorscripts/scripts": {};
  /** @description Insere um novo script */
  "POST /gestorscripts/scripts": {
    searchParams: {
      /**
       * Nome do script
       */
      nome?: string;
      /**
       * Data inicial do script
       */
      dataInicial?: string;
      /**
       * Data final do script
       */
      dataFinal?: string;
      /**
       * Informe se o script está ativo ou não
       */
      ativo?: boolean;
      /**
       * Prioridade do script
       */
      prioridade?: number;
      /**
       * Posição do script
       */
      posicao?:
        | {
          "0": "H";
          "1": "e";
          "2": "a";
          "3": "d";
          "4": "e";
          "5": "r";
          "6": "P";
          "7": "r";
          "8": "i";
          "9": "m";
          "10": "e";
          "11": "i";
          "12": "r";
          "13": "a";
          "14": "L";
          "15": "i";
          "16": "n";
          "17": "h";
          "18": "a";
        }
        | {
          "0": "H";
          "1": "e";
          "2": "a";
          "3": "d";
          "4": "e";
          "5": "r";
          "6": "U";
          "7": "l";
          "8": "t";
          "9": "i";
          "10": "m";
          "11": "a";
          "12": "L";
          "13": "i";
          "14": "n";
          "15": "h";
          "16": "a";
        }
        | {
          "0": "B";
          "1": "o";
          "2": "d";
          "3": "y";
          "4": "P";
          "5": "r";
          "6": "i";
          "7": "m";
          "8": "e";
          "9": "i";
          "10": "r";
          "11": "a";
          "12": "L";
          "13": "i";
          "14": "n";
          "15": "h";
          "16": "a";
        }
        | {
          "0": "B";
          "1": "o";
          "2": "d";
          "3": "y";
          "4": "U";
          "5": "l";
          "6": "t";
          "7": "i";
          "8": "m";
          "9": "a";
          "10": "L";
          "11": "i";
          "12": "n";
          "13": "h";
          "14": "a";
        }
        | {
          "0": "F";
          "1": "o";
          "2": "o";
          "3": "t";
          "4": "e";
          "5": "r";
          "6": "P";
          "7": "r";
          "8": "i";
          "9": "m";
          "10": "e";
          "11": "i";
          "12": "r";
          "13": "a";
          "14": "L";
          "15": "i";
          "16": "n";
          "17": "h";
          "18": "a";
        }
        | {
          "0": "F";
          "1": "o";
          "2": "o";
          "3": "t";
          "4": "e";
          "5": "r";
          "6": "U";
          "7": "l";
          "8": "t";
          "9": "i";
          "10": "m";
          "11": "e";
          "12": "L";
          "13": "i";
          "14": "n";
          "15": "h";
          "16": "a";
        };
      /**
       * Tipo da página do script
       */
      tipoPagina?:
        | { "0": "T"; "1": "o"; "2": "d"; "3": "a"; "4": "s" }
        | { "0": "H"; "1": "o"; "2": "m"; "3": "e" }
        | { "0": "B"; "1": "u"; "2": "s"; "3": "c"; "4": "a" }
        | {
          "0": "C";
          "1": "a";
          "2": "t";
          "3": "e";
          "4": "g";
          "5": "o";
          "6": "r";
          "7": "i";
          "8": "a";
        }
        | {
          "0": "F";
          "1": "a";
          "2": "b";
          "3": "r";
          "4": "i";
          "5": "c";
          "6": "a";
          "7": "n";
          "8": "t";
          "9": "e";
        }
        | {
          "0": "E";
          "1": "s";
          "2": "t";
          "3": "a";
          "4": "t";
          "5": "i";
          "6": "c";
          "7": "a";
          "8": "s";
        }
        | {
          "0": "P";
          "1": "r";
          "2": "o";
          "3": "d";
          "4": "u";
          "5": "t";
          "6": "o";
        }
        | {
          "0": "C";
          "1": "a";
          "2": "r";
          "3": "r";
          "4": "i";
          "5": "n";
          "6": "h";
          "7": "o";
        };
      /**
       * Identificador da página
       */
      identificadorPagina?: string;
      /**
       * Conteúdo do script
       */
      conteudo?: string;
      /**
       * Status do script
       */
      publicado?: boolean;
    };
  };
  /** @description Assinaturas com erro na loja */
  "GET /assinaturas/erros": {};
  /** @description Método que realiza uma cotação de frete */
  "POST /fretes/cotacoes": {
    searchParams: {
      /**
       * Valor total do pedido (optional)
       */
      valorTotal?: number;
      /**
       * Lista de produtos da cotação
       */
      produtos?: {
        /**
         * Id do produto variante
         */
        identificador?: string;
        /**
         * Quantidade do produto
         */
        quantidade?: number;
      }[];
    };
  };
  /** @description Lista de Ranges de Ceps de uma Loja Física */
  "GET /lojasFisicas/:lojaFisicaId/rangeCep": {};
  /** @description Insere um range de cep em uma Loja Física */
  "POST /lojasFisicas/:lojaFisicaId/rangeCep": {
    searchParams: {
      /**
       * Nome do range de cep
       */
      nome?: string;
      /**
       * Cep inicial do range. Formato: 00.000-000
       */
      cepInicial?: string;
      /**
       * Cep final do range. Formato: 00.000-000
       */
      cepFinal?: string;
    };
  };
  /** @description Remove uma lista de range de cep de uma Loja Física */
  "DELETE /lojasFisicas/:lojaFisicaId/rangeCep": {
    searchParams: {
      /**
       * Lista de range de cep a serem excluídos da loja física
       */
      RAW_BODY?: {
        /**
         * Id da faixa de cep a ser deletado
         */
        rangeCepId?: number;
      }[];
    };
  };
  /** @description Retorna usuário encontrado */
  "GET /usuarios/:usuarioId/enderecos": {};
  /** @description Insere um endereço para um usuário pelo id do usuário */
  "POST /usuarios/:usuarioId/enderecos": {
    searchParams: {
      /**
       * Nome de identificação do endereço a ser cadastrado (Max Length: 100)
       */
      nomeEndereco?: string;
      /**
       * Nome da rua (Max Length: 500)
       */
      rua?: string;
      /**
       * Número do local (Max Length: 50)
       */
      numero?: string;
      /**
       * Complemento (Max Length: 250) (optional)
       */
      complemento?: string;
      /**
       * Referência para a localização do endereço (Max Length: 500) (optional)
       */
      referencia?: string;
      /**
       * Bairro do endereço (Max Length: 100)
       */
      bairro?: string;
      /**
       * Cidade em que se localiza o endereço (Max Length: 100)
       */
      cidade?: string;
      /**
       * O estado (Max Length: 100)
       */
      estado?: string;
      /**
       * Código do cep (Max Length: 50)
       */
      cep?: string;
    };
  };
  /** @description Retorna uma lista de vínculos entre usuário e parceiro */
  "GET /usuarios/:email/parceiros": {};
  /** @description Atualiza o preço de vários produtos com base na lista enviada. Limite de 50 produtos por requisição */
  "PUT /produtos/precos": {
    searchParams: {
      /**
       * Lista com os dados da atualização do preço (optional)
       */
      RAW_BODY?: {
        /**
         * Identificador do produto (ProdutoVarianteId ou SKU)
         */
        identificador?: string;
        /**
         * Preço de custo do produto variante
         */
        precoCusto?: number;
        /**
         * "PrecoDe" do produto variante
         */
        precoDe?: number;
        /**
         * "PrecoPor" do produto variante
         */
        precoPor?: number;
        /**
         * Fator multiplicador que gera o preço de exibição do produto. Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no "PrecoPor". (1 por padrão)
         */
        fatorMultiplicadorPreco?: number;
      }[];
    };
  };
  /** @description Usuário encontrado */
  "GET /usuarios/email/:email": {};
  /** @description Novo token gerado com sucesso */
  "POST /autenticacao/trocarLoja/:novaLoja": {};
  /** @description Campos de cadastro personalizado encontrados */
  "GET /usuarios/camposcadastropersonalizado": {};
  /** @description Objeto do hotsite */
  "GET /hotsites/:hotsiteId": {};
  /** @description Atualiza os dados de um hotsite existente */
  "PUT /hotsites/:hotsiteId": {
    searchParams: {
      /**
       * Nome do hotsite
       */
      nome?: string;
      /**
       * Data/hora em que o hotsite começará a ser exibido (optional)
       */
      dataInicio?: string;
      /**
       * Data/Hora (último dia) em que o hotsite não será mais exibido (optional)
       */
      dataFinal?: string;
      /**
       * Informe a url do hotsite. Por exemplo, se o site for 'busca.meusite.com.br', e o hotsite desejado for 'busca.meusite.com.br/hotsite/natal' informe neste campo somente a url 'hotsite/natal', sem a barra '/' no início
       */
      url?: string;
      /**
       * Informe o número de produtos que deve ser exibido por página
       */
      tamanhoPagina?: number;
      /**
       * Informe o identificador do template que será utilizado. Caso não saiba o identificador do template desejado, o mesmo pode ser buscado no endpoint GET/Templates
       */
      templateId?: number;
      /**
       * Informe qual será a ordenação dos Produtos no Hotsite (optional)
       */
      ordenacao?:
        | {
          "0": "N";
          "1": "e";
          "2": "n";
          "3": "h";
          "4": "u";
          "5": "m";
          "6": "a";
        }
        | {
          "0": "N";
          "1": "o";
          "2": "m";
          "3": "e";
          "4": "C";
          "5": "r";
          "6": "e";
          "7": "s";
          "8": "c";
          "9": "e";
          "10": "n";
          "11": "t";
          "12": "e";
        }
        | {
          "0": "N";
          "1": "o";
          "2": "m";
          "3": "e";
          "4": "D";
          "5": "e";
          "6": "c";
          "7": "r";
          "8": "e";
          "9": "s";
          "10": "c";
          "11": "e";
          "12": "n";
          "13": "t";
          "14": "e";
        }
        | {
          "0": "L";
          "1": "a";
          "2": "n";
          "3": "c";
          "4": "a";
          "5": "m";
          "6": "e";
          "7": "n";
          "8": "t";
          "9": "o";
        }
        | {
          "0": "M";
          "1": "e";
          "2": "n";
          "3": "o";
          "4": "r";
          "5": "P";
          "6": "r";
          "7": "e";
          "8": "c";
          "9": "o";
        }
        | {
          "0": "M";
          "1": "a";
          "2": "i";
          "3": "o";
          "4": "r";
          "5": "P";
          "6": "r";
          "7": "e";
          "8": "c";
          "9": "o";
        }
        | {
          "0": "M";
          "1": "a";
          "2": "i";
          "3": "s";
          "4": "V";
          "5": "e";
          "6": "n";
          "7": "d";
          "8": "i";
          "9": "d";
          "10": "o";
          "11": "s";
        }
        | {
          "0": "M";
          "1": "a";
          "2": "i";
          "3": "o";
          "4": "r";
          "5": "e";
          "6": "s";
          "7": "D";
          "8": "e";
          "9": "s";
          "10": "c";
          "11": "o";
          "12": "n";
          "13": "t";
          "14": "o";
          "15": "s";
        }
        | {
          "0": "A";
          "1": "l";
          "2": "e";
          "3": "a";
          "4": "t";
          "5": "o";
          "6": "r";
          "7": "i";
          "8": "o";
        }
        | {
          "0": "M";
          "1": "e";
          "2": "n";
          "3": "o";
          "4": "r";
          "5": "E";
          "6": "s";
          "7": "t";
          "8": "o";
          "9": "q";
          "10": "u";
          "11": "e";
        }
        | {
          "0": "M";
          "1": "a";
          "2": "i";
          "3": "o";
          "4": "r";
          "5": "E";
          "6": "s";
          "7": "t";
          "8": "o";
          "9": "q";
          "10": "u";
          "11": "e";
        };
      /**
       * Produtos que devem aparecer no hotsite
       */
      listaProdutos?: {
        /**
         * você pode utilizar essa opção para gerar um hotsite utilizando uma expressão de busca. Ao utilizá-la, os produtos adicionados nos outros modos de criação de hotsite serão ignorados (optional)
         */
        expressao?: string;
        /**
         * Id dos produtos
         */
        produtos?: {
          /**
           * Identificador do produto a ser mostrado no hotsite
           */
          produtoId?: number;
          /**
           * Ordem para apresentação do produto (optional)
           */
          ordem?: number;
        }[];
      };
      /**
       * Dados de seo
       */
      seo?: {
        /**
         * Informe o Título que será exibido quando o Hotsite for acessado (optional)
         */
        titulo?: string;
        /**
         * Não se esqueça! Além do texto livre, você pode utilizar as tags [Nome.Hotsite] e [Fbits.NomeLoja] para o cadastro das MetaTags e Title! (optional)
         */
        metas?: {
          /**
           * Informe os dados da Metatag
           */
          conteudo?: string;
          /**
           * Informe os dados da Metatag
           */
          nome?: string;
          /**
           * Informe os dados da Metatag
           */
          httpEquiv?: string;
          /**
           * Informe os dados da Metatag
           */
          scheme?: string;
        }[];
      };
      /**
       * Lista de identificadores de banners a serem vinculados ao hotsite
       */
      banners?: {
        /**
         * Identificador do banner (optional)
         */
        bannerId?: number;
      }[];
      /**
       * Lista de identificadores de conteúdos a serem vinculados ao hotsite
       */
      conteudos?: {
        /**
         * Identificador do conteúdo
         */
        conteudoId?: number;
      }[];
      /**
       * Status do hotsite (optional)
       */
      ativo?: boolean;
    };
  };
  /** @description Deleta um hotsite que foi inserido manualmente, hotsites gerados automaticamente não podem ser deletados */
  "DELETE /hotsites/:hotsiteId": {};
  /** @description Lista com assinaturas */
  "GET /assinaturas": {};
  /** @description Lista de categorias */
  "GET /categorias": {};
  /** @description Insere uma nova categoria */
  "POST /categorias": {
    searchParams: {
      /**
       * Nome da categoria (optional)
       */
      nome?: string;
      /**
       * Id da categoria pai (optional)
       */
      categoriaPaiId?: number;
      /**
       * Id da categoria ERP (optional)
       */
      categoriaERPId?: string;
      /**
       * Categoria ativo/inativo (optional)
       */
      ativo?: boolean;
      /**
       * Categoria de reseller (optional)
       */
      isReseller?: boolean;
      /**
       * Exibir Matriz de Atributos (optional)
       */
      exibirMatrizAtributos?:
        | { "0": "S"; "1": "i"; "2": "m" }
        | { "0": "N"; "1": "a"; "2": "o" }
        | { "0": "N"; "1": "e"; "2": "u"; "3": "t"; "4": "r"; "5": "o" };
      /**
       * Informe a quantidade máxima permitida para compra por produtos desta categoria. Informe zero para assumir a configuração geral da loja (optional)
       */
      quantidadeMaximaCompraUnidade?: number;
      /**
       * Informe o valor mínimo para compra em produtos desta categoria (optional)
       */
      valorMinimoCompra?: number;
      /**
       * Informe se será exibida no menu (optional)
       */
      exibeMenu?: boolean;
    };
  };
  /** @description Lista de fabricantes */
  "GET /fabricantes": {};
  /** @description Insere um novo fabricante */
  "POST /fabricantes": {
    searchParams: {
      /**
       * Nome do fabricante (optional)
       */
      nome?: string;
      /**
       * URL tipo logo (optional)
       */
      urlLogoTipo?: string;
      /**
       * Insira neste campo uma URL para redirecionamento. A URL deve ser inserida por completa (optional)
       */
      urlLink?: string;
      /**
       * Insira nesse campo a URL do Carrossel  da Marca (optional)
       */
      urlCarrossel?: string;
    };
  };
  /** @description Atualiza o campo Recebido de um produto vinculado a um evento */
  "PUT /eventos/:eventoId/produtos/recebido": {
    searchParams: {
      /**
       * Id do produto variante (optional)
       */
      produtoVarianteId?: number;
      /**
       * Se o produto foi recebido fora da lista (optional)
       */
      recebidoForaLista?: boolean;
    };
  };
  /** @description Tipo evento buscado */
  "GET /tiposEvento/:tipoEventoId": {};
  /** @description Atualiza o tipo evento */
  "PUT /tiposEvento/:tipoEventoId": {
    searchParams: {
      /**
       * Nome do Tipo de Evento
       */
      nome?: string;
      /**
       * Tipo de entrega
       */
      tipoEntrega?:
        | {
          "0": "E";
          "1": "n";
          "2": "t";
          "3": "r";
          "4": "e";
          "5": "g";
          "6": "a";
          "7": "A";
          "8": "g";
          "9": "e";
          "10": "n";
          "11": "d";
          "12": "a";
          "13": "d";
          "14": "a";
        }
        | {
          "0": "E";
          "1": "n";
          "2": "t";
          "3": "r";
          "4": "e";
          "5": "g";
          "6": "a";
          "7": "C";
          "8": "o";
          "9": "n";
          "10": "f";
          "11": "o";
          "12": "r";
          "13": "m";
          "14": "e";
          "15": "C";
          "16": "o";
          "17": "m";
          "18": "p";
          "19": "r";
          "20": "a";
          "21": "R";
          "22": "e";
          "23": "a";
          "24": "l";
          "25": "i";
          "26": "z";
          "27": "a";
          "28": "d";
          "29": "a";
        }
        | { "0": "T"; "1": "o"; "2": "d"; "3": "o"; "4": "s" }
        | { "0": "N"; "1": "e"; "2": "n"; "3": "h"; "4": "u"; "5": "m" };
      /**
       * Disponibilização do Tipo de Evento
       */
      tipoDisponibilizacao?:
        | {
          "0": "D";
          "1": "i";
          "2": "s";
          "3": "p";
          "4": "o";
          "5": "n";
          "6": "i";
          "7": "b";
          "8": "i";
          "9": "l";
          "10": "i";
          "11": "z";
          "12": "a";
          "13": "c";
          "14": "a";
          "15": "o";
          "16": "D";
          "17": "e";
          "18": "C";
          "19": "r";
          "20": "e";
          "21": "d";
          "22": "i";
          "23": "t";
          "24": "o";
          "25": "s";
        }
        | {
          "0": "D";
          "1": "i";
          "2": "s";
          "3": "p";
          "4": "o";
          "5": "n";
          "6": "i";
          "7": "b";
          "8": "i";
          "9": "l";
          "10": "i";
          "11": "z";
          "12": "a";
          "13": "c";
          "14": "a";
          "15": "o";
          "16": "D";
          "17": "e";
          "18": "P";
          "19": "r";
          "20": "o";
          "21": "d";
          "22": "u";
          "23": "t";
          "24": "o";
          "25": "s";
        }
        | { "0": "T"; "1": "o"; "2": "d"; "3": "o"; "4": "s" };
      /**
       * Permissão para remoção automática de produtos
       */
      permitirRemocaoAutomaticaProdutos?: boolean;
      /**
       * Cor em hexadecimal para o titulo de informações
       */
      corHexTituloInformacoes?: string;
      /**
       * Cor em hexadecimal para o corpo de informações
       */
      corHexCorpoInformacoes?: string;
      /**
       * Número de abas de informações, podendo ser de 1 a 2
       */
      numeroAbasInformacoes?: number;
      /**
       * Quantidade de dias para que o evento expire
       */
      quantidadeDiasParaEventoExpirar?: number;
      /**
       * Quantidade de locais do evento
       */
      numeroLocaisEvento?: number;
      /**
       * Informa se o evento está ativo ou inativo
       */
      ativo?: boolean;
      /**
       * Informa a disponibilidade do evento
       */
      disponivel?: boolean;
      /**
       * O beneficiário do frete
       */
      tipoBeneficiarioFrete?:
        | {
          "0": "D";
          "1": "o";
          "2": "n";
          "3": "o";
          "4": "d";
          "5": "a";
          "6": "L";
          "7": "i";
          "8": "s";
          "9": "t";
          "10": "a";
        }
        | {
          "0": "C";
          "1": "o";
          "2": "n";
          "3": "v";
          "4": "i";
          "5": "d";
          "6": "a";
          "7": "d";
          "8": "o";
        };
      /**
       * Imagem da logo do evento em base64
       */
      imagemLogoEvento?: string;
      /**
       * Produtos Sugeridos para este evento (optional)
       */
      sugestaoProdutos?: {
        /**
         * Id do tipo de evento
         */
        tipoEventoId?: number;
        /**
         * Identificador do produto variante
         */
        produtoVarianteId?: number;
      }[];
    };
  };
  /** @description Produtos de uma assinatura */
  "GET /assinaturas/:email": {};
  /** @description Lista de produtos variantes vinculados aos tipo de evento */
  "GET /eventos/:eventoId": {};
  /** @description Atualiza um evento */
  "PUT /eventos/:eventoId": {
    searchParams: {
      /**
       * Identificador do tipo de evento
       */
      tipoEventoId?: number;
      /**
       * Identificador do endereço de entrega
       */
      enderecoEntregaId?: number;
      /**
       * Titulo do evento
       */
      titulo?: string;
      /**
       * Atributo obsoleto - (optional)
       */
      url?: string;
      /**
       * Data do Evento
       */
      data?: string;
      /**
       * Email do usuário
       */
      usuarioEmail?: string;
      /**
       * Disponibilidade do evento (optional)
       */
      disponivel?: boolean;
      /**
       * Quantos dias antes do evento ele será exibido (optional)
       */
      diasAntesEvento?: number;
      /**
       * Até quantos dias depois do evento ele será exibido (optional)
       */
      diasDepoisEvento?: number;
      /**
       * Url do Logo. (Base64)
       */
      urlLogo?: string;
      /**
       * Url da Capa. (Base64)
       */
      urlCapa?: string;
      /**
       * Quem é o proprietário
       */
      proprietario?: string;
      /**
       * Se a aba de informação 01 será habilitada
       */
      abaInfo01Habilitado?: boolean;
      /**
       * Texto para o campo informação 01 (optional)
       */
      textoInfo01?: string;
      /**
       * Conteúdo para o campo informação 01 (optional)
       */
      conteudoInfo01?: string;
      /**
       * Se a aba de informação 02 será habilitada
       */
      abaInfo02Habilitado?: boolean;
      /**
       * Texto para o campo informação 02 (optional)
       */
      textoInfo02?: string;
      /**
       * Conteúdo para o campo informação 02 (optional)
       */
      conteudoInfo02?: string;
      /**
       * Se a aba de mensagem será habilitada (optional)
       */
      abaMensagemHabilitado?: boolean;
      /**
       * Tipo de lista de presente
       */
      enumTipoListaPresenteId?:
        | {
          "0": "L";
          "1": "i";
          "2": "s";
          "3": "t";
          "4": "a";
          "5": "P";
          "6": "r";
          "7": "o";
          "8": "n";
          "9": "t";
          "10": "a";
        }
        | {
          "0": "L";
          "1": "i";
          "2": "s";
          "3": "t";
          "4": "a";
          "5": "M";
          "6": "a";
          "7": "n";
          "8": "u";
          "9": "a";
          "10": "l";
        };
      /**
       * Tipo de entrega
       */
      enumTipoEntregaId?:
        | {
          "0": "E";
          "1": "n";
          "2": "t";
          "3": "r";
          "4": "e";
          "5": "g";
          "6": "a";
          "7": "A";
          "8": "g";
          "9": "e";
          "10": "n";
          "11": "d";
          "12": "a";
          "13": "d";
          "14": "a";
        }
        | {
          "0": "E";
          "1": "n";
          "2": "t";
          "3": "r";
          "4": "e";
          "5": "g";
          "6": "a";
          "7": "C";
          "8": "o";
          "9": "n";
          "10": "f";
          "11": "o";
          "12": "r";
          "13": "m";
          "14": "e";
          "15": "C";
          "16": "o";
          "17": "m";
          "18": "p";
          "19": "r";
          "20": "a";
          "21": "R";
          "22": "e";
          "23": "a";
          "24": "l";
          "25": "i";
          "26": "z";
          "27": "a";
          "28": "d";
          "29": "a";
        }
        | { "0": "T"; "1": "o"; "2": "d"; "3": "o"; "4": "s" }
        | { "0": "N"; "1": "e"; "2": "n"; "3": "h"; "4": "u"; "5": "m" };
      /**
       * Seleção de produto no evento
       */
      eventoProdutoSelecionado?: {
        /**
         * Id do produto variante
         */
        produtoVarianteId?: number;
        /**
         * Se produto recebido fora da lista (optional)
         */
        recebidoForaLista?: boolean;
        /**
         * Se produto removido (optional)
         */
        removido?: boolean;
      }[];
      /**
       * Endereço do Evento
       */
      enderecoEvento?: {
        /**
         * Nome para identificação do endereço
         */
        nome?: string;
        /**
         * Endereço
         */
        endereco?: string;
        /**
         * Cep do endereço
         */
        cep?: string;
        /**
         * Numero do endereço
         */
        numero?: string;
        /**
         * Bairro do endereço
         */
        bairro?: string;
        /**
         * Cidade do endereço
         */
        cidade?: string;
        /**
         * Estado do endereço
         */
        estado?: string;
      }[];
    };
  };
  /** @description Lista de identificadores de banners vinculados ao hotsite */
  "GET /hotsites/:hotsiteId/banners": {};
  /** @description Vincula um ou mais banners a um hotsite específico */
  "POST /hotsites/:hotsiteId/banners": {
    searchParams: {
      /**
       * Lista de identificadores de banners para vincular ao hotsite
       */
      banners?: {
        /**
         * Identificador do banner (optional)
         */
        bannerId?: number;
      }[];
    };
  };
  /** @description Desvincula um ou mais banners de um hotsite específico */
  "DELETE /hotsites/:hotsiteId/banners": {
    searchParams: {
      /**
       * Lista de identificadores de banners a serem desvinculados
       */
      banners?: {
        /**
         * Identificador do banner (optional)
         */
        bannerId?: number;
      }[];
    };
  };
  /** @description Estorna um valor menor ou igual ao total do pedido "Pago" */
  "POST /pedidos/estorno/:pedidoId": {
    searchParams: {
      /**
       * Valor a ser estornado do pedido. Total ou parcial.
       */
      Valor?: number;
    };
  };
  /** @description Pedidos que terão vínculo com o grupo de assinatura informado. */
  "POST /assinaturas/grupoassinatura/assinatura": {
    searchParams: {
      /**
       * Lista de pedidos a serem vinculados a assinatura
       */
      pedidos?: {
        /**
         * Id do pedido
         */
        pedidoId?: number;
      }[];
      /**
       * ID da recorrência vinculada ao grupo, disponível em GET /assinaturas/grupoassinatura
       */
      recorrenciaId?: number;
      /**
       * ID do grupo de assinatura, disponível em GET /assinaturas/grupoassinatura
       */
      grupoAssinaturaId?: number;
    };
  };
  /** @description Lista de situações de pedido */
  "GET /situacoesPedido": {};
  /** @description Lista de Lojas Físicas */
  "GET /lojasFisicas": {};
  /** @description Insere uma Loja Física */
  "POST /lojasFisicas": {
    searchParams: {
      /**
       * Id da loja (optional)
       */
      lojaId?: number;
      /**
       * Nome da loja (optional)
       */
      nome?: string;
      /**
       * DDD da localidade de destino da loja (optional)
       */
      ddd?: number;
      /**
       * Telefone da loja (optional)
       */
      telefone?: string;
      /**
       * E-mail de contato da loja (optional)
       */
      email?: string;
      /**
       * CEP do endereço da loja (optional)
       */
      cep?: string;
      /**
       * Logradouro do endereço da loja (optional)
       */
      logradouro?: string;
      /**
       * Número de localização do endereço da loja (optional)
       */
      numero?: string;
      /**
       * Complemento para localização da loja (optional)
       */
      complemento?: string;
      /**
       * Bairro do endereço do loja (optional)
       */
      bairro?: string;
      /**
       * Cidade em que a loja se encontra (optional)
       */
      cidade?: string;
      /**
       * Id do estado em que a loja se encontra (optional)
       */
      estadoId?: number;
      /**
       * Prazo de entrega (optional)
       */
      prazoEntrega?: number;
      /**
       * Prazo máximo para retirada (optional)
       */
      prazoMaximoRetirada?: number;
      /**
       * Status da loja (optional)
       */
      ativo?: boolean;
      /**
       * Valido (optional)
       */
      valido?: boolean;
      /**
       * Informações complementares da loja (optional)
       */
      textoComplementar?: string;
      /**
       * Se a retirada na loja será ativada (optional)
       */
      retirarNaLoja?: boolean;
      /**
       * Latitude (optional)
       */
      latitude?: number;
      /**
       * Longitude (optional)
       */
      longitude?: number;
      /**
       * Lista com os Identificadores dos centros de distribuição que serão vinculados a loja física (optional)
       */
      centroDistribuicao?: {
        /**
         * Id do centro de distribuição
         */
        centroDistribuicaoId?: number;
        /**
         * Prazo de entrega
         */
        prazoEntrega?: number;
      }[];
    };
  };
  /** @description Atualiza um usuário pelo email */
  "PUT /usuarios/:email": {
    searchParams: {
      /**
       * Tipo de pessoa
       */
      tipoPessoa?:
        | { "0": "F"; "1": "i"; "2": "s"; "3": "i"; "4": "c"; "5": "a" }
        | {
          "0": "J";
          "1": "u";
          "2": "r";
          "3": "i";
          "4": "d";
          "5": "i";
          "6": "c";
          "7": "a";
        };
      /**
       * Origem do contato
       */
      origemContato?:
        | { "0": "G"; "1": "o"; "2": "o"; "3": "g"; "4": "l"; "5": "e" }
        | { "0": "B"; "1": "i"; "2": "n"; "3": "g" }
        | { "0": "J"; "1": "o"; "2": "r"; "3": "n"; "4": "a"; "5": "l" }
        | {
          "0": "P";
          "1": "a";
          "2": "t";
          "3": "r";
          "4": "o";
          "5": "c";
          "6": "i";
          "7": "n";
          "8": "i";
          "9": "o";
          "10": "E";
          "11": "s";
          "12": "p";
          "13": "o";
          "14": "r";
          "15": "t";
          "16": "i";
          "17": "v";
          "18": "o";
        }
        | {
          "0": "R";
          "1": "e";
          "2": "c";
          "3": "o";
          "4": "m";
          "5": "e";
          "6": "n";
          "7": "d";
          "8": "a";
          "9": "c";
          "10": "a";
          "11": "o";
          "12": "A";
          "13": "l";
          "14": "g";
          "15": "u";
          "16": "e";
          "17": "m";
        }
        | {
          "0": "R";
          "1": "e";
          "2": "v";
          "3": "i";
          "4": "s";
          "5": "t";
          "6": "a";
        }
        | {
          "0": "S";
          "1": "i";
          "2": "t";
          "3": "e";
          "4": "I";
          "5": "n";
          "6": "t";
          "7": "e";
          "8": "r";
          "9": "n";
          "10": "e";
          "11": "t";
        }
        | {
          "0": "T";
          "1": "e";
          "2": "l";
          "3": "e";
          "4": "v";
          "5": "i";
          "6": "s";
          "7": "a";
          "8": "o";
        }
        | { "0": "O"; "1": "u"; "2": "t"; "3": "r"; "4": "o" }
        | {
          "0": "U";
          "1": "s";
          "2": "u";
          "3": "a";
          "4": "r";
          "5": "i";
          "6": "o";
          "7": "I";
          "8": "m";
          "9": "p";
          "10": "o";
          "11": "r";
          "12": "t";
          "13": "a";
          "14": "d";
          "15": "o";
          "16": "V";
          "17": "i";
          "18": "a";
          "19": "A";
          "20": "d";
          "21": "m";
          "22": "i";
          "23": "n";
        }
        | {
          "0": "P";
          "1": "a";
          "2": "y";
          "3": "P";
          "4": "a";
          "5": "l";
          "6": "E";
          "7": "x";
          "8": "p";
          "9": "r";
          "10": "e";
          "11": "s";
          "12": "s";
        };
      /**
       * Tipo Sexo (optional)
       */
      tipoSexo?:
        | {
          "0": "U";
          "1": "n";
          "2": "d";
          "3": "e";
          "4": "f";
          "5": "i";
          "6": "n";
          "7": "e";
          "8": "d";
        }
        | {
          "0": "M";
          "1": "a";
          "2": "s";
          "3": "c";
          "4": "u";
          "5": "l";
          "6": "i";
          "7": "n";
          "8": "o";
        }
        | {
          "0": "F";
          "1": "e";
          "2": "m";
          "3": "i";
          "4": "n";
          "5": "i";
          "6": "n";
          "7": "o";
        };
      /**
       * Nome do usuário (Max Length: 100)
       */
      nome?: string;
      /**
       * CPF do usuário caso seja pessoa física (Max Length: 50) (optional)
       */
      cpf?: string;
      /**
       * E-mail do usuário (Max Length: 100)
       */
      email?: string;
      /**
       * RG do usuário caso seja pessoa física (Max Length: 50) (optional)
       */
      rg?: string;
      /**
       * Telefone residencial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50)
       */
      telefoneResidencial?: string;
      /**
       * Telefone celular do usuário. Deve ser informado o DDD junto ao número (Max Length: 50) (optional)
       */
      telefoneCelular?: string;
      /**
       * Telefone comercial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50) (optional)
       */
      telefoneComercial?: string;
      /**
       * Data de nascimento (optional)
       */
      dataNascimento?: string;
      /**
       * Razão social do usuário, caso seja uma pessoa jurídica(Max Length: 100) (optional)
       */
      razaoSocial?: string;
      /**
       * CNPJ do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
       */
      cnpj?: string;
      /**
       * Inscrição estadual do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
       */
      inscricaoEstadual?: string;
      /**
       * Responsável(Max Length: 100) (optional)
       */
      responsavel?: string;
      /**
       * Data de criação do cadastro (optional)
       */
      dataCriacao?: string;
      /**
       * Data de atualização do cadastro (optional)
       */
      dataAtualizacao?: string;
      /**
       * Se o usuário é revendedor (optional)
       */
      revendedor?: boolean;
      /**
       * Informação cadastral (optional)
       */
      listaInformacaoCadastral?: {
        /**
         * Chave
         */
        chave?: string;
        /**
         * Valor
         */
        valor?: string;
      }[];
      /**
       * Avatar (Max Length: 50) (optional)
       */
      avatar?: string;
      /**
       * IP do usuário (Max Length: 20) (optional)
       */
      ip?: string;
      /**
       * Seta ou retorna o valor de Aprovado (optional)
       */
      aprovado?: boolean;
    };
  };
  /** @description Insere um novo campo de cadastro personalizado */
  "POST /usuarios/CadastroPersonalizado": {
    searchParams: {
      /**
       * Nome do campo
       */
      nome?: string;
      /**
       * Tipo do campo
       */
      tipo?:
        | {
          "0": "T";
          "1": "e";
          "2": "x";
          "3": "t";
          "4": "o";
          "5": "L";
          "6": "i";
          "7": "v";
          "8": "r";
          "9": "e";
        }
        | {
          "0": "V";
          "1": "a";
          "2": "l";
          "3": "o";
          "4": "r";
          "5": "e";
          "6": "s";
          "7": "P";
          "8": "r";
          "9": "e";
          "10": "d";
          "11": "e";
          "12": "f";
          "13": "i";
          "14": "n";
          "15": "i";
          "16": "d";
          "17": "o";
          "18": "s";
        }
        | {
          "0": "R";
          "1": "a";
          "2": "d";
          "3": "i";
          "4": "o";
          "5": "B";
          "6": "u";
          "7": "t";
          "8": "t";
          "9": "o";
          "10": "n";
        };
      /**
       * Se o campo será obrigatório
       */
      obrigatorio?: boolean;
      /**
       * Ordem
       */
      ordem?: number;
      /**
       * Informação para os campos (optional)
       */
      valorPreDefinido?: {
        /**
         * Valor
         */
        valor?: string;
        /**
         * Ordem
         */
        ordem?: number;
      }[];
    };
  };
  /** @description Seta identificador como variante principal */
  "PUT /produtos/:identificador/principal": {};
  /** @description Lista de inscrições */
  "GET /webhook/inscricao": {};
  /** @description Insere uma inscrição */
  "POST /webhook/inscricao": {
    searchParams: {
      /**
       * Nome da inscrição
       */
      nome?: string;
      /**
       * Url para qual deve ser enviada as notificações
       */
      appUrl?: string;
      /**
       * Tópicos em que deseja se inscrever
       */
      topicos?: string[];
      /**
       * Usuário que está realizando a inscrição
       */
      usuario?: string;
      /**
       * Status da inscrição, se ativada ou desativada
       */
      ativo?: boolean;
      /**
       * E-mail do responsável para notificá-lo quando não seja possível notificá-lo pelo AppUrl informado
       */
      emailResponsavel?: string;
      /**
       * Headers que devam ser adicionados ao realizar a requisição para o AppUrl. Headers de Conteúdo como 'ContentType' não são necessário. As requisições realizada sempre serão no formato 'application/json' (optional)
       */
      headers?: {
        /**
         * Chave do header, por exemplo: 'Authorization'
         */
        chave?: string;
        /**
         * Valor / Conteúdo do header, por exemplo: 'Basic 0G3EQWD-W324F-234SD-2421OFSD'
         */
        valor?: string;
      }[];
    };
  };
  /** @description Lista de produtos de um Grupo de Personalização */
  "GET /grupospersonalizacao/:grupoPersonalizacaoId/produtos": {};
  /** @description Vincula produtos a um Grupo de Personalização */
  "POST /grupospersonalizacao/:grupoPersonalizacaoId/produtos": {
    searchParams: {
      /**
       * Lista de Id dos produtos
       */
      RAW_BODY?: {
        /**
         * Id do produto
         */
        produtoId?: number;
      }[];
    };
  };
  /** @description Remove o vinculo de produtos de um Grupo de Personalização */
  "DELETE /grupospersonalizacao/:grupoPersonalizacaoId/produtos": {
    searchParams: {
      /**
       * Lista de Id dos produtos
       */
      RAW_BODY?: {
        /**
         * Id do produto
         */
        produtoId?: number;
      }[];
    };
  };
  /** @description Gráfico do Faturamento */
  "GET /dashboard/graficofaturamento": {};
  /** @description Atualiza uma informação de um produto específico */
  "PUT /produtos/:identificador/informacoes/:informacaoId": {
    searchParams: {
      /**
       * Titulo da informação (optional)
       */
      titulo?: string;
      /**
       * Texto da informação (optional)
       */
      texto?: string;
      /**
       * Informação se o produto variante está visível no site.
       */
      exibirSite?: boolean;
      /**
       * Tipo de informação do produto (optional)
       */
      tipoInformacao?:
        | {
          "0": "I";
          "1": "n";
          "2": "f";
          "3": "o";
          "4": "r";
          "5": "m";
          "6": "a";
          "7": "c";
          "8": "o";
          "9": "e";
          "10": "s";
        }
        | {
          "0": "B";
          "1": "e";
          "2": "n";
          "3": "e";
          "4": "f";
          "5": "i";
          "6": "c";
          "7": "i";
          "8": "o";
          "9": "s";
        }
        | {
          "0": "E";
          "1": "s";
          "2": "p";
          "3": "e";
          "4": "c";
          "5": "i";
          "6": "f";
          "7": "i";
          "8": "c";
          "9": "a";
          "10": "c";
          "11": "o";
          "12": "e";
          "13": "s";
        }
        | {
          "0": "D";
          "1": "a";
          "2": "d";
          "3": "o";
          "4": "s";
          "5": "T";
          "6": "e";
          "7": "c";
          "8": "n";
          "9": "i";
          "10": "c";
          "11": "o";
          "12": "s";
        }
        | {
          "0": "C";
          "1": "o";
          "2": "m";
          "3": "p";
          "4": "o";
          "5": "s";
          "6": "i";
          "7": "c";
          "8": "a";
          "9": "o";
        }
        | {
          "0": "M";
          "1": "o";
          "2": "d";
          "3": "o";
          "4": "D";
          "5": "e";
          "6": "U";
          "7": "s";
          "8": "a";
          "9": "r";
        }
        | {
          "0": "C";
          "1": "u";
          "2": "i";
          "3": "d";
          "4": "a";
          "5": "d";
          "6": "o";
          "7": "s";
        }
        | {
          "0": "I";
          "1": "t";
          "2": "e";
          "3": "n";
          "4": "s";
          "5": "I";
          "6": "n";
          "7": "c";
          "8": "l";
          "9": "u";
          "10": "s";
          "11": "o";
          "12": "s";
        }
        | { "0": "D"; "1": "i"; "2": "c"; "3": "a"; "4": "s" }
        | { "0": "V"; "1": "i"; "2": "d"; "3": "e"; "4": "o" }
        | {
          "0": "D";
          "1": "e";
          "2": "s";
          "3": "c";
          "4": "r";
          "5": "i";
          "6": "c";
          "7": "a";
          "8": "o";
        }
        | {
          "0": "V";
          "1": "a";
          "2": "l";
          "3": "o";
          "4": "r";
          "5": "R";
          "6": "e";
          "7": "f";
          "8": "e";
          "9": "r";
          "10": "e";
          "11": "n";
          "12": "t";
          "13": "e";
        }
        | {
          "0": "P";
          "1": "o";
          "2": "p";
          "3": "U";
          "4": "p";
          "5": "R";
          "6": "e";
          "7": "f";
          "8": "e";
          "9": "r";
          "10": "e";
          "11": "n";
          "12": "t";
          "13": "e";
        }
        | {
          "0": "P";
          "1": "r";
          "2": "e";
          "3": "s";
          "4": "c";
          "5": "r";
          "6": "i";
          "7": "c";
          "8": "a";
          "9": "o";
        }
        | {
          "0": "T";
          "1": "a";
          "2": "b";
          "3": "e";
          "4": "l";
          "5": "a";
          "6": "D";
          "7": "e";
          "8": "M";
          "9": "e";
          "10": "d";
          "11": "i";
          "12": "d";
          "13": "a";
          "14": "s";
        }
        | { "0": "S"; "1": "p"; "2": "o"; "3": "t" }
        | {
          "0": "S";
          "1": "i";
          "2": "n";
          "3": "o";
          "4": "p";
          "5": "s";
          "6": "e";
        }
        | {
          "0": "C";
          "1": "a";
          "2": "r";
          "3": "r";
          "4": "i";
          "5": "n";
          "6": "h";
          "7": "o";
        };
    };
  };
  /** @description Exclui uma informação de um produto */
  "DELETE /produtos/:identificador/informacoes/:informacaoId": {};
  /** @description Assinatura de um determinado pedido */
  "GET /assinaturas/pedido/:pedidoId": {};
  /** @description Atualiza rastreamento parcial (Rastreamento e UrlRastreamento) */
  "PUT /pedidos/:pedidoId/rastreamento/:pedidoRastreamentoId/parcial": {
    searchParams: {
      /**
       * Objeto Pedido Rastreamento
       */
      RAW_BODY?: {
        /**
         * Rastreamento (optional)
         */
        rastreamento?: string;
        /**
         * URL de Rastreamento (optional)
         */
        urlRastreamento?: string;
      };
    };
  };
  /** @description Access token atualizado com sucesso */
  "POST /autenticacao/refresh": {};
  /** @description Ativa ou inativa uma inscrição */
  "PUT /webhook/inscricao/:inscricaoId/Ativar": {
    searchParams: {
      /**
       * Status que deseja atualizar a inscrição. True (Ativada) ou False (desativada)
       */
      ativo?: boolean;
      /**
       * Usuário que está realizando a atualização
       */
      usuario?: string;
      /**
       * Observação que deseje fazer com relação a ativação/desativação da inscrição (optional)
       */
      observacao?: string;
    };
  };
  /** @description Assinatura com erro na loja */
  "GET /assinaturas/erros/:assinaturaId": {};
  /** @description Limite de crédito de um usuário específico */
  "GET /usuarios/limiteCreditoPorEmail/:email": {};
  /** @description Retorna o histórico de situações de um pedido */
  "GET /pedidos/:pedidoId/historicoSituacao": {};
  /** @description Atualiza o limite de crédito para um usuário */
  "PUT /usuarios/limiteCredito/:usuarioId": {};
  /** @description Retorna a lista de produtos de um portfolio */
  "GET /portfolios/:portfolioId/produtos": {};
  /** @description Vinculo de produtos ao portfolio */
  "PUT /portfolios/:portfolioId/produtos": {
    searchParams: {
      /**
       * Lista dos Id's dos produtos
       */
      RAW_BODY?: {
        /**
         * Id do produto
         */
        produtoId?: number;
      }[];
    };
  };
  /** @description Insere um rastreamento e status a um produto variante */
  "POST /pedidos/:pedidoId/produtos/:produtoVarianteId/rastreamento": {
    searchParams: {
      /**
       * Id da situação do pedido
       */
      situacaoPedidoId?: number;
      /**
       * Quantidade (optional)
       */
      quantidade?: number;
      /**
       * Id do centro de distribuição
       */
      centroDistribuicaoId?: number;
      /**
       * Rastreamento (optional)
       */
      rastreamento?: string;
      /**
       * Data (optional)
       */
      dataEvento?: string;
      /**
       * Número da nota fiscal (optional)
       */
      numeroNotaFiscal?: string;
      /**
       * Chave de acesso NFE (optional)
       */
      chaveAcessoNFE?: string;
      /**
       * URL NFE (optional)
       */
      urlNFE?: string;
      /**
       * Serie NFE (optional)
       */
      serieNFE?: string;
      /**
       * CFOP (optional)
       */
      cfop?: number;
      /**
       * URL de rastreamento (optional)
       */
      urlRastreamento?: string;
    };
  };
  /** @description Usuários encontrados */
  "GET /parceiros/:parceiroId/usuarios": {};
  /** @description Dados de transação do pedido */
  "GET /pedidos/transacoes/:transacaoId": {};
  /** @description Operação realizada com ou sem sucesso para os usuários */
  "PUT /usuarios/autorizar": {
    searchParams: {
      /**
       * Usuários
       */
      RAW_BODY?: {
        /**
         * Identificador
         */
        identificador?: string;
        /**
         * Status de aprovação
         */
        aprovado?: boolean;
      }[];
    };
  };
  /** @description Atualiza a data de cadastro um produto com base nos dados enviados */
  "PUT /produtos/:identificador/DataCadastro": {
    searchParams: {
      /**
       * Data de cadastro de um produto - Formato: aaaa-mm-dd hh:mm:ss
       */
      dataCadastro?: string;
    };
  };
  /** @description Atualiza a situação do status de um produto do pedido */
  "PUT /pedidos/:pedidoId/:produtoVarianteId/status": {
    searchParams: {
      /**
       * Dados da situação do produto (optional)
       */
      RAW_BODY?: {
        /**
         * Id do centro de distribuição do produto
         */
        centroDistribuicaoId?: number;
        /**
         * Quantidade de produtos do centro de distribuição
         */
        quantidade?: number;
        /**
         * Novo status da situação do produto (são os mesmo status do pedido)
         */
        situacaoPedidoProdutoId?: number;
      };
    };
  };
  /** @description Indicadores dos Produtos no Estoque */
  "GET /dashboard/produtoestoque": {};
  /** @description Atualiza um endereço de um usuário pelo e-mail do usuário */
  "PUT /usuarios/:email/enderecos/:enderecoId": {
    searchParams: {
      /**
       * Nome de identificação do endereço a ser cadastrado (Max Length: 100)
       */
      nomeEndereco?: string;
      /**
       * Nome da rua (Max Length: 500)
       */
      rua?: string;
      /**
       * Número do local (Max Length: 50)
       */
      numero?: string;
      /**
       * Complemento (Max Length: 250) (optional)
       */
      complemento?: string;
      /**
       * Referência para a localização do endereço (Max Length: 500) (optional)
       */
      referencia?: string;
      /**
       * Bairro do endereço (Max Length: 100)
       */
      bairro?: string;
      /**
       * Cidade em que se localiza o endereço (Max Length: 100)
       */
      cidade?: string;
      /**
       * O estado (Max Length: 100)
       */
      estado?: string;
      /**
       * Código do cep (Max Length: 50)
       */
      cep?: string;
    };
  };
  /** @description Atualiza o status de uma avaliação de um produto variante */
  "PUT /produtoavaliacao/:produtoAvaliacaoId/status": {
    searchParams: {
      /**
       * Status para a avaliação
       */
      status?:
        | {
          "0": "P";
          "1": "e";
          "2": "n";
          "3": "d";
          "4": "e";
          "5": "n";
          "6": "t";
          "7": "e";
        }
        | {
          "0": "N";
          "1": "a";
          "2": "o";
          "3": "A";
          "4": "p";
          "5": "r";
          "6": "o";
          "7": "v";
          "8": "a";
          "9": "d";
          "10": "o";
        }
        | {
          "0": "A";
          "1": "p";
          "2": "r";
          "3": "o";
          "4": "v";
          "5": "a";
          "6": "d";
          "7": "o";
        };
    };
  };
  /** @description Fabricante encontrado */
  "GET /fabricantes/:nome": {};
  /** @description Lista de parceiros vinculados ao banner */
  "GET /banners/:bannerId/parceiros": {};
  /** @description Vincula parceiros com um banner específico */
  "POST /banners/:bannerId/parceiros": {
    searchParams: {
      /**
       * Lista de Id dos parceiros
       */
      RAW_BODY?: {
        /**
         * Id do parceiro (optional)
         */
        parceiroId?: number;
      }[];
    };
  };
  /** @description Deleta o vinculo de um ou mais parceiros com um banner específico */
  "DELETE /banners/:bannerId/parceiros": {
    searchParams: {
      /**
       * Lista de identificadores de parceiros para desvincular do banner
       */
      listaParceiros?: {
        /**
         * Id do parceiro (optional)
         */
        parceiroId?: number;
      }[];
    };
  };
  /** @description Lista de tabelas de preços */
  "GET /tabelaPrecos": {};
  /** @description Insere uma nova tabela de preços */
  "POST /tabelaPrecos": {
    searchParams: {
      /**
       * Nome da tabela de preço
       */
      nome?: string;
      /**
       * Data que inicia a tabela de preço
       */
      dataInicial?: string;
      /**
       * Data de término da tabela de preço
       */
      dataFinal?: string;
      /**
       * Status da tabela de preço
       */
      ativo?: boolean;
    };
  };
  /** @description Atualiza a imagem do banner */
  "PUT /banners/:bannerId/Imagem": {
    searchParams: {
      /**
       * URL da Imagem (optional)
       */
      urlImagem?: string;
      /**
       * Informações para atualizar a imagem (optional)
       */
      Imagem?: {
        /**
         * string da imagem em base 64
         */
        base64?: string;
        /**
         * formato da imagem
         */
        formato?:
          | { "0": "P"; "1": "N"; "2": "G" }
          | { "0": "J"; "1": "P"; "2": "G" }
          | { "0": "J"; "1": "P"; "2": "E"; "3": "G" };
        /**
         * nome da imagem
         */
        nome?: string;
      };
    };
  };
  /** @description Exclui o vínculo entre uma categoria e um produto */
  "DELETE /produtos/:identificador/categorias/:id": {};
  /** @description Xml com os dados de uma mídia específicas entre duas datas */
  "GET /midias/:identificador": {};
  /** @description Lista de hotsites */
  "GET /hotsites": {};
  /** @description A lista de produtos para serem exibidos no hotsite está limitada a 1024 itens, tanto por expressão como por produtos. */
  "POST /hotsites": {
    searchParams: {
      /**
       * Nome do hotsite
       */
      nome?: string;
      /**
       * Data/hora em que o hotsite começará a ser exibido (optional)
       */
      dataInicio?: string;
      /**
       * Data/Hora (último dia) em que o hotsite não será mais exibido (optional)
       */
      dataFinal?: string;
      /**
       * Informe a url do hotsite. Por exemplo, se o site for 'busca.meusite.com.br', e o hotsite desejado for 'busca.meusite.com.br/hotsite/natal' informe neste campo somente a url 'hotsite/natal', sem a barra '/' no início
       */
      url?: string;
      /**
       * Informe o número de produtos que deve ser exibido por página
       */
      tamanhoPagina?: number;
      /**
       * Informe o identificador do template que será utilizado. Caso não saiba o identificador do template desejado, o mesmo pode ser buscado no endpoint GET/Templates
       */
      templateId?: number;
      /**
       * Informe qual será a ordenação dos Produtos no Hotsite (optional)
       */
      ordenacao?:
        | {
          "0": "N";
          "1": "e";
          "2": "n";
          "3": "h";
          "4": "u";
          "5": "m";
          "6": "a";
        }
        | {
          "0": "N";
          "1": "o";
          "2": "m";
          "3": "e";
          "4": "C";
          "5": "r";
          "6": "e";
          "7": "s";
          "8": "c";
          "9": "e";
          "10": "n";
          "11": "t";
          "12": "e";
        }
        | {
          "0": "N";
          "1": "o";
          "2": "m";
          "3": "e";
          "4": "D";
          "5": "e";
          "6": "c";
          "7": "r";
          "8": "e";
          "9": "s";
          "10": "c";
          "11": "e";
          "12": "n";
          "13": "t";
          "14": "e";
        }
        | {
          "0": "L";
          "1": "a";
          "2": "n";
          "3": "c";
          "4": "a";
          "5": "m";
          "6": "e";
          "7": "n";
          "8": "t";
          "9": "o";
        }
        | {
          "0": "M";
          "1": "e";
          "2": "n";
          "3": "o";
          "4": "r";
          "5": "P";
          "6": "r";
          "7": "e";
          "8": "c";
          "9": "o";
        }
        | {
          "0": "M";
          "1": "a";
          "2": "i";
          "3": "o";
          "4": "r";
          "5": "P";
          "6": "r";
          "7": "e";
          "8": "c";
          "9": "o";
        }
        | {
          "0": "M";
          "1": "a";
          "2": "i";
          "3": "s";
          "4": "V";
          "5": "e";
          "6": "n";
          "7": "d";
          "8": "i";
          "9": "d";
          "10": "o";
          "11": "s";
        }
        | {
          "0": "M";
          "1": "a";
          "2": "i";
          "3": "o";
          "4": "r";
          "5": "e";
          "6": "s";
          "7": "D";
          "8": "e";
          "9": "s";
          "10": "c";
          "11": "o";
          "12": "n";
          "13": "t";
          "14": "o";
          "15": "s";
        }
        | {
          "0": "A";
          "1": "l";
          "2": "e";
          "3": "a";
          "4": "t";
          "5": "o";
          "6": "r";
          "7": "i";
          "8": "o";
        }
        | {
          "0": "M";
          "1": "e";
          "2": "n";
          "3": "o";
          "4": "r";
          "5": "E";
          "6": "s";
          "7": "t";
          "8": "o";
          "9": "q";
          "10": "u";
          "11": "e";
        }
        | {
          "0": "M";
          "1": "a";
          "2": "i";
          "3": "o";
          "4": "r";
          "5": "E";
          "6": "s";
          "7": "t";
          "8": "o";
          "9": "q";
          "10": "u";
          "11": "e";
        };
      /**
       * Produtos que devem aparecer no hotsite
       */
      listaProdutos?: {
        /**
         * você pode utilizar essa opção para gerar um hotsite utilizando uma expressão de busca. Ao utilizá-la, os produtos adicionados nos outros modos de criação de hotsite serão ignorados (optional)
         */
        expressao?: string;
        /**
         * Id dos produtos
         */
        produtos?: {
          /**
           * Identificador do produto a ser mostrado no hotsite
           */
          produtoId?: number;
          /**
           * Ordem para apresentação do produto (optional)
           */
          ordem?: number;
        }[];
      };
      /**
       * Dados de seo (optional)
       */
      seo?: {
        /**
         * Informe o Título que será exibido quando o Hotsite for acessado (optional)
         */
        titulo?: string;
        /**
         * Não se esqueça! Além do texto livre, você pode utilizar as tags [Nome.Hotsite] e [Fbits.NomeLoja] para o cadastro das MetaTags e Title! (optional)
         */
        metas?: {
          /**
           * Informe os dados da Metatag
           */
          conteudo?: string;
          /**
           * Informe os dados da Metatag
           */
          nome?: string;
          /**
           * Informe os dados da Metatag
           */
          httpEquiv?: string;
          /**
           * Informe os dados da Metatag
           */
          scheme?: string;
        }[];
      };
      /**
       * Lista de identificadores de banners a serem vinculados ao hotsite (optional)
       */
      banners?: {
        /**
         * Identificador do banner (optional)
         */
        bannerId?: number;
      }[];
      /**
       * Lista de identificadores de conteúdos a serem vinculados ao hotsite
       */
      conteudos?: {
        /**
         * Identificador do conteúdo
         */
        conteudoId?: number;
      }[];
      /**
       * Status do hotsite (optional)
       */
      ativo?: boolean;
    };
  };
  /** @description Lista de pedidos */
  "GET /pedidos/situacaoPedido/:situacoesPedido": {};
  /** @description Portfolio encontrado */
  "GET /portfolios/:nome": {};
  /** @description Lista de categorias de um produto */
  "GET /produtos/:identificador/categorias": {};
  /** @description Adiciona o vínculo entre um produto e uma categoria com base na lista enviada */
  "POST /produtos/:identificador/categorias": {
    searchParams: {
      /**
       * Id da Categoria Principal (optional)
       */
      categoriaPrincipalId?: number;
      /**
       * Id da categoria a qual o produto deverá ser vinculado (optional)
       */
      listaCategoriaId?: number[];
    };
  };
  /** @description Lista de Atacarejos */
  "GET /produtos/:identificador/atacarejo": {};
  /** @description Adiciona novos Atacarejos */
  "POST /produtos/:identificador/atacarejo": {
    searchParams: {
      /**
       * Lista de Atacarejos (optional)
       */
      RAW_BODY?: {
        /**
         * Preço atacado
         */
        precoAtacado?: number;
        /**
         * Quantidade do produto
         */
        quantidade?: number;
      }[];
    };
  };
  /** @description Recorrências cadastradas na loja */
  "GET /assinaturas/recorrencias": {};
  /** @description Atualiza rastreamento completo (com os dados da N.F.) */
  "PUT /pedidos/:pedidoId/rastreamento/:pedidoRastreamentoId": {
    searchParams: {
      /**
       * Objeto Pedido Rastreamento
       */
      RAW_BODY?: {
        /**
         * Número da nota fiscal
         */
        notaFiscal?: string;
        /**
         * Código Fiscal de Operações e Prestações
         */
        cfop?: number;
        /**
         * Data Envio
         */
        dataEnviado?: string;
        /**
         * Chave de Acesso NFE
         */
        chaveAcessoNFE?: string;
        /**
         * Rastreamento (optional)
         */
        rastreamento?: string;
        /**
         * URL de rastreamento (optional)
         */
        urlRastreamento?: string;
        /**
         * Transportadora (optional)
         */
        transportadora?: string;
        /**
         * Data da entrega (optional)
         */
        dataEntrega?: string;
      };
    };
  };
  /** @description Atualiza a prioridade de um centro de distribuição */
  "PUT /centrosdistribuicao/:centroDistribuicaoId/prioridade": {
    searchParams: {
      /**
       * (optional)
       */
      incrementoOrdem?: number;
      /**
       * (optional)
       */
      desativarPriorizacao?: boolean;
    };
  };
  /** @description Conteúdos encontrados */
  "GET /conteudos": {};
  /** @description Insere um novo conteúdo na loja */
  "POST /conteudos": {
    searchParams: {
      /**
       * Titulo do conteúdo
       */
      titulo?: string;
      /**
       * Conteúdo ativo/inativo
       */
      ativo?: boolean;
      /**
       * Data de inicio de exibição do conteúdo (optional)
       */
      dataInicio?: string;
      /**
       * Data final de exibição do conteúdo (optional)
       */
      dataFim?: string;
      /**
       * Posicionamento do conteúdo
       */
      posicionamento?:
        | { "0": "T"; "1": "o"; "2": "p"; "3": "o" }
        | { "0": "C"; "1": "e"; "2": "n"; "3": "t"; "4": "r"; "5": "o" }
        | { "0": "R"; "1": "o"; "2": "d"; "3": "a"; "4": "p"; "5": "e" }
        | {
          "0": "L";
          "1": "a";
          "2": "t";
          "3": "e";
          "4": "r";
          "5": "a";
          "6": "l";
          "7": "D";
          "8": "i";
          "9": "r";
          "10": "e";
          "11": "i";
          "12": "t";
          "13": "a";
        }
        | {
          "0": "L";
          "1": "a";
          "2": "t";
          "3": "e";
          "4": "r";
          "5": "a";
          "6": "l";
          "7": "E";
          "8": "s";
          "9": "q";
          "10": "u";
          "11": "e";
          "12": "r";
          "13": "d";
          "14": "a";
        }
        | {
          "0": "M";
          "1": "o";
          "2": "b";
          "3": "i";
          "4": "l";
          "5": "e";
          "6": "T";
          "7": "o";
          "8": "p";
          "9": "o";
        }
        | {
          "0": "M";
          "1": "o";
          "2": "b";
          "3": "i";
          "4": "l";
          "5": "e";
          "6": "R";
          "7": "o";
          "8": "d";
          "9": "a";
          "10": "p";
          "11": "e";
        };
      /**
       * Informações do conteúdo
       */
      conteudo?: string;
      /**
       * Insira em qual Termo de Busca o Conteúdo será exibido (optional)
       */
      termoBusca?: string;
      /**
       * Exibição do conteúdo nas buscas
       */
      exibeTodasBuscas?: boolean;
      /**
       * Não exibição do conteúdo nas buscas
       */
      naoExibeBuscas?: boolean;
      /**
       * Exibição do conteúdo nos hotsites
       */
      exibeTodosHotsites?: boolean;
      /**
       * Insira quais Hotsites que o Conteúdo será exibido (optional)
       */
      hotsitesId?: number[];
    };
  };
  /** @description Atualiza a imagem de estampa do produto */
  "PUT /produtos/:identificador/imagens/estampa": {
    searchParams: {
      /**
       * Id da imagem que será marcada como estampa
       */
      idImagem?: number;
    };
  };
  /** @description Retorna lista de usuários cadastrados/descadastrados na newsletter (50 por página) */
  "GET /usuarios/newsletter": {};
  /** @description Ativa ou desativa um endereço de um usuário com base no e-mail do usuário */
  "PUT /usuarios/:email/enderecos/:enderecoId/ativar": {
    searchParams: {
      /**
       * Status do endereço
       */
      status?: boolean;
    };
  };
  /** @description Insere uma avaliação para um produto variante */
  "POST /produtoavaliacao/:identificador": {
    searchParams: {
      /**
       * Texto referente a avaliação do produto
       */
      comentario?: string;
      /**
       * Escala de 1 a 5 para avaliar o produto
       */
      avaliacao?: number;
      /**
       * Identificado do usuário
       */
      usuarioId?: number;
      /**
       * Referente a data que a avaliação foi criada
       */
      dataAvaliacao?: string;
      /**
       * Nome do usuário que avaliou
       */
      nome?: string;
      /**
       * Email do usuário que avaliou
       */
      email?: string;
      /**
       * Referente ao status que libera a visualização da avaliação no site
       */
      status?:
        | {
          "0": "P";
          "1": "e";
          "2": "n";
          "3": "d";
          "4": "e";
          "5": "n";
          "6": "t";
          "7": "e";
        }
        | {
          "0": "N";
          "1": "a";
          "2": "o";
          "3": "A";
          "4": "p";
          "5": "r";
          "6": "o";
          "7": "v";
          "8": "a";
          "9": "d";
          "10": "o";
        }
        | {
          "0": "A";
          "1": "p";
          "2": "r";
          "3": "o";
          "4": "v";
          "5": "a";
          "6": "d";
          "7": "o";
        };
    };
  };
  /** @description Relatório de receitas de um determinado período */
  "GET /dashboard/receita": {};
  /** @description Lista de fretes */
  "GET /fretes": {};
  /** @description Insere um novo contrato de frete */
  "POST /fretes": {
    searchParams: {
      /**
       * Nome do contrato de frete (optional)
       */
      nome?: string;
      /**
       * Status do contrato de frete (optional)
       */
      ativo?: boolean;
      /**
       * Volume máximo permitido , em metro cúbico (m³). (optional)
       */
      volumeMaximo?: number;
      /**
       * Informe o peso cubado. Altura x largura x profundidade x fator de cubagem. (optional)
       */
      pesoCubado?: number;
      /**
       * Id da configuração entrega agendada (optional)
       */
      entregaAgendadaConfiguracaoId?: number;
      /**
       * URL rastreamento (optional)
       */
      linkRastreamento?: string;
      /**
       * Contrato é exclusivo assinatura (optional)
       */
      ehAssinatura?: boolean;
      /**
       * Informe a largura máxima, em centímetros (cm). (optional)
       */
      larguraMaxima?: number;
      /**
       * Informe a altura máxima, em centímetros (cm). (optional)
       */
      alturaMaxima?: number;
      /**
       * Informe o comprimento máximo, em centímetros (cm). (optional)
       */
      comprimentoMaximo?: number;
      /**
       * Informe a soma das três dimensões (Largura + Altura + Comprimento), em centímetros (cm). (optional)
       */
      limiteMaximoDimensoes?: number;
      /**
       * Informe o limite de peso cubado, em gramas (g). (optional)
       */
      limitePesoCubado?: number;
      /**
       * Informe quantos dias no mínimo esse contrato de frete leva para ser enviado ao cliente (optional)
       */
      tempoMinimoDespacho?: number;
      /**
       * Informe o Id do centro de distribuição (optional)
       */
      centroDistribuicaoId?: number;
      /**
       * Informe o valor mínimo em produtos necessário para disponibilidade da tabela de frete (optional)
       */
      valorMinimoProdutos?: number;
    };
  };
  /** @description Detalhes de uma assinatura */
  "GET /assinaturas/:assinaturaId": {};
  /** @description Atualiza a situação de uma assinatura específica */
  "PUT /assinaturas/:assinaturaId": {
    searchParams: {
      /**
       * Id do endereço (optional)
       */
      enderecoId?: number;
      /**
       * Id do cartão de crédito do usuário (optional)
       */
      usuarioCartaoCreditoId?: number;
      /**
       * Período Recorrência (optional)
       */
      periodoRecorrencia?: string;
      /**
       * Situação da Assinatura (optional)
       */
      situacaoAssinatura?:
        | { "0": "A"; "1": "t"; "2": "i"; "3": "v"; "4": "a" }
        | {
          "0": "P";
          "1": "a";
          "2": "u";
          "3": "s";
          "4": "a";
          "5": "d";
          "6": "a";
        }
        | {
          "0": "C";
          "1": "a";
          "2": "n";
          "3": "c";
          "4": "e";
          "5": "l";
          "6": "a";
          "7": "d";
          "8": "a";
        };
      /**
       * Cupom (optional)
       */
      cupom?: string;
    };
  };
  /** @description Buscar autor pelo nome */
  "GET /autores/:nomeAutor": {};
  /** @description Lista o conteúdo de uma versão */
  "GET /gestorscripts/scripts/:scriptId/versao/:versaoId/conteudo": {};
  /** @description Altera a data de recorrência de uma assinatura */
  "PUT /assinaturas/:assinaturaId/proximaRecorrencia": {
    searchParams: {
      /**
       * Data da próxima recorrência (Será considerado apenas o dia, mês e ano. Hora e minutos não serão considerados)
       */
      proximaRecorrencia?: string;
    };
  };
  /** @description Lista de parceiros com pedidos */
  "GET /parceiros/comPedidos": {};
  /** @description Usuário encontrado */
  "GET /usuarios/cnpj/:cnpj": {};
  /** @description Deleta um produto da lista de sugestões de produtos de um tipo de evento */
  "DELETE /tiposEvento/:tipoEventoId/produto/:produtoVarianteId": {};
  /** @description Deleta o vinculo de um produto a um evento */
  "DELETE /eventos/:eventoId/produto/:produtoVarianteId": {};
  /** @description Define uma categoria de um produto como principal */
  "PUT /produtos/:identificador/categoriaPrincipal": {
    searchParams: {
      /**
       * Id da categoria
       */
      categoriaId?: number;
    };
  };
  /** @description Atualiza o estoque de vários produtos com base na lista enviada. Limite de 50 produtos por requisição */
  "PUT /produtos/estoques": {
    searchParams: {
      /**
       * Lista com os dados da atualização do estoque (optional)
       */
      RAW_BODY?: {
        /**
         * Valor único utilizado para identificar o produto
         */
        identificador?: string;
        /**
         * Prazo de entrega do produto
         */
        prazoEntrega?: number;
        /**
         * Lista com os dados da atualização do estoque
         */
        listaEstoque?: {
          /**
           * Estoque físico do produto
           */
          estoqueFisico?: number;
          /**
           * Estoque reservado do produto
           */
          estoqueReservado?: number;
          /**
           * Id do centro de distribuição do estoque do produto
           */
          centroDistribuicaoId?: number;
          /**
           * Id do produto variante
           */
          produtoVarianteId?: number;
          /**
           * Quantidade para ativar o alerta de estoque
           */
          alertaEstoque?: number;
        }[];
      }[];
    };
  };
  /** @description Objeto com o estoque total e o estoque por centro de distribuição de um produto variante */
  "GET /produtos/:identificador/estoque": {};
  /** @description Usuário encontrado */
  "GET /usuarios/usuarioId/:usuarioId": {};
  /** @description Produtos Mais Vendidos */
  "GET /dashboard/produtos": {};
  /** @description Atualiza rastreamento parcial (Rastreamento e UrlRastreamento) */
  "PUT /pedidos/:pedidoId/produtos/:produtoVarianteId/rastreamento/:pedidoRastreamentoProdutoId/parcial":
    {
      searchParams: {
        /**
         * Objeto Pedido Rastreamento Produto
         */
        RAW_BODY?: {
          /**
           * Rastreamento (optional)
           */
          rastreamento?: string;
          /**
           * URL de Rastreamento (optional)
           */
          urlRastreamento?: string;
        };
      };
    };
  /** @description Atualiza o status do banner pelo id */
  "PUT /banners/:bannerId/status": {
    searchParams: {
      /**
       * Status para qual deve ir o baner: Ativo (true) ou Inativo (false)
       */
      status?: boolean;
    };
  };
  /** @description Atualiza um endereço de um usuário pelo id do usuário */
  "PUT /usuarios/:usuarioId/enderecos/:enderecoId": {
    searchParams: {
      /**
       * Nome de identificação do endereço a ser cadastrado (Max Length: 100)
       */
      nomeEndereco?: string;
      /**
       * Nome da rua (Max Length: 500)
       */
      rua?: string;
      /**
       * Número do local (Max Length: 50)
       */
      numero?: string;
      /**
       * Complemento (Max Length: 250) (optional)
       */
      complemento?: string;
      /**
       * Referência para a localização do endereço (Max Length: 500) (optional)
       */
      referencia?: string;
      /**
       * Bairro do endereço (Max Length: 100)
       */
      bairro?: string;
      /**
       * Cidade em que se localiza o endereço (Max Length: 100)
       */
      cidade?: string;
      /**
       * O estado (Max Length: 100)
       */
      estado?: string;
      /**
       * Código do cep (Max Length: 50)
       */
      cep?: string;
    };
  };
  /** @description Lista de avaliações de produtos */
  "GET /produtos/:identificador/avaliacoes": {};
  /** @description Atualiza um usuário pelo id */
  "PUT /usuarios/:usuarioId": {
    searchParams: {
      /**
       * Tipo de pessoa
       */
      tipoPessoa?:
        | { "0": "F"; "1": "i"; "2": "s"; "3": "i"; "4": "c"; "5": "a" }
        | {
          "0": "J";
          "1": "u";
          "2": "r";
          "3": "i";
          "4": "d";
          "5": "i";
          "6": "c";
          "7": "a";
        };
      /**
       * Origem do contato
       */
      origemContato?:
        | { "0": "G"; "1": "o"; "2": "o"; "3": "g"; "4": "l"; "5": "e" }
        | { "0": "B"; "1": "i"; "2": "n"; "3": "g" }
        | { "0": "J"; "1": "o"; "2": "r"; "3": "n"; "4": "a"; "5": "l" }
        | {
          "0": "P";
          "1": "a";
          "2": "t";
          "3": "r";
          "4": "o";
          "5": "c";
          "6": "i";
          "7": "n";
          "8": "i";
          "9": "o";
          "10": "E";
          "11": "s";
          "12": "p";
          "13": "o";
          "14": "r";
          "15": "t";
          "16": "i";
          "17": "v";
          "18": "o";
        }
        | {
          "0": "R";
          "1": "e";
          "2": "c";
          "3": "o";
          "4": "m";
          "5": "e";
          "6": "n";
          "7": "d";
          "8": "a";
          "9": "c";
          "10": "a";
          "11": "o";
          "12": "A";
          "13": "l";
          "14": "g";
          "15": "u";
          "16": "e";
          "17": "m";
        }
        | {
          "0": "R";
          "1": "e";
          "2": "v";
          "3": "i";
          "4": "s";
          "5": "t";
          "6": "a";
        }
        | {
          "0": "S";
          "1": "i";
          "2": "t";
          "3": "e";
          "4": "I";
          "5": "n";
          "6": "t";
          "7": "e";
          "8": "r";
          "9": "n";
          "10": "e";
          "11": "t";
        }
        | {
          "0": "T";
          "1": "e";
          "2": "l";
          "3": "e";
          "4": "v";
          "5": "i";
          "6": "s";
          "7": "a";
          "8": "o";
        }
        | { "0": "O"; "1": "u"; "2": "t"; "3": "r"; "4": "o" }
        | {
          "0": "U";
          "1": "s";
          "2": "u";
          "3": "a";
          "4": "r";
          "5": "i";
          "6": "o";
          "7": "I";
          "8": "m";
          "9": "p";
          "10": "o";
          "11": "r";
          "12": "t";
          "13": "a";
          "14": "d";
          "15": "o";
          "16": "V";
          "17": "i";
          "18": "a";
          "19": "A";
          "20": "d";
          "21": "m";
          "22": "i";
          "23": "n";
        }
        | {
          "0": "P";
          "1": "a";
          "2": "y";
          "3": "P";
          "4": "a";
          "5": "l";
          "6": "E";
          "7": "x";
          "8": "p";
          "9": "r";
          "10": "e";
          "11": "s";
          "12": "s";
        };
      /**
       * Tipo Sexo (optional)
       */
      tipoSexo?:
        | {
          "0": "U";
          "1": "n";
          "2": "d";
          "3": "e";
          "4": "f";
          "5": "i";
          "6": "n";
          "7": "e";
          "8": "d";
        }
        | {
          "0": "M";
          "1": "a";
          "2": "s";
          "3": "c";
          "4": "u";
          "5": "l";
          "6": "i";
          "7": "n";
          "8": "o";
        }
        | {
          "0": "F";
          "1": "e";
          "2": "m";
          "3": "i";
          "4": "n";
          "5": "i";
          "6": "n";
          "7": "o";
        };
      /**
       * Nome do usuário (Max Length: 100)
       */
      nome?: string;
      /**
       * CPF do usuário caso seja pessoa física (Max Length: 50) (optional)
       */
      cpf?: string;
      /**
       * E-mail do usuário (Max Length: 100)
       */
      email?: string;
      /**
       * RG do usuário caso seja pessoa física (Max Length: 50) (optional)
       */
      rg?: string;
      /**
       * Telefone residencial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50)
       */
      telefoneResidencial?: string;
      /**
       * Telefone celular do usuário. Deve ser informado o DDD junto ao número (Max Length: 50) (optional)
       */
      telefoneCelular?: string;
      /**
       * Telefone comercial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50) (optional)
       */
      telefoneComercial?: string;
      /**
       * Data de nascimento (optional)
       */
      dataNascimento?: string;
      /**
       * Razão social do usuário, caso seja uma pessoa jurídica(Max Length: 100) (optional)
       */
      razaoSocial?: string;
      /**
       * CNPJ do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
       */
      cnpj?: string;
      /**
       * Inscrição estadual do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
       */
      inscricaoEstadual?: string;
      /**
       * Responsável(Max Length: 100) (optional)
       */
      responsavel?: string;
      /**
       * Data de criação do cadastro (optional)
       */
      dataCriacao?: string;
      /**
       * Data de atualização do cadastro (optional)
       */
      dataAtualizacao?: string;
      /**
       * Se o usuário é revendedor (optional)
       */
      revendedor?: boolean;
      /**
       * Informação cadastral (optional)
       */
      listaInformacaoCadastral?: {
        /**
         * Chave
         */
        chave?: string;
        /**
         * Valor
         */
        valor?: string;
      }[];
      /**
       * Avatar (Max Length: 50) (optional)
       */
      avatar?: string;
      /**
       * IP do usuário (Max Length: 20) (optional)
       */
      ip?: string;
      /**
       * Seta ou retorna o valor de Aprovado (optional)
       */
      aprovado?: boolean;
    };
  };
  /** @description Liberar reservas de pedidos */
  "POST /pedidos/liberarReservas": {
    searchParams: {
      /**
       * Números dos pedidos que se deseja buscar
       */
      RAW_BODY?: number[];
    };
  };
  /** @description Atualiza para o mesmo preço, todos os variantes de um produto encontrado com o SKU informado. Limite de 50 produtos por requisição */
  "PUT /produtos/precos/lote": {
    searchParams: {
      /**
       * Lista com os dados da atualização do preço por lote
       */
      RAW_BODY?: {
        /**
         * Identificador do produto (SKU)
         */
        sku?: string;
        /**
         * Preço de custo do produto variante. Se passado 0 irá setar os valores para zero, se for NULO, não irá atualizar o preço de custo (optional)
         */
        precoCusto?: number;
        /**
         * "PrecoDe" do produto variante
         */
        precoDe?: number;
        /**
         * "PrecoPor" do produto variante
         */
        precoPor?: number;
        /**
         * Fator multiplicador que gera o preço de exibição do produto. Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no "PrecoPor". (1 por padrão) (optional)
         */
        fatorMultiplicadorPreco?: number;
      }[];
    };
  };
  /** @description Atualiza a exibição do banner em parceiros, se deve ser em todos ou não */
  "PUT /banners/:bannerId/Parceiros": {
    searchParams: {
      /**
       * Exibição do banner em parceiros
       */
      exibirEmTodosParceiros?: boolean;
    };
  };
  /** @description Retorna lista contendo os Id's dos pedidos do usuário */
  "GET /usuarios/documento/:documento/pedidos": {};
  /** @description Objeto com o precoDe e precoPor de um produto variante */
  "GET /produtos/:identificador/preco": {};
  /** @description Campo atualizado com sucesso */
  "PUT /usuarios/bloquear": {
    searchParams: {
      /**
       * Usuários (optional)
       */
      RAW_BODY?: {
        /**
         * E-mail do usuário
         */
        email?: string;
        /**
         * Status do usuário
         */
        bloqueado?: boolean;
      }[];
    };
  };
  /** @description Frete atualizado com sucesso */
  "PUT /fretes/:freteId/Ativo": {
    searchParams: {
      /**
       * Status para atualização do contrato de frete
       */
      ativo?: boolean;
    };
  };
  /** @description Gera um novo pedido para a assinatura */
  "POST /assinaturas/:assinaturaId/pedido": {};
  /** @description Xml com os dados das mídias entre duas datas */
  "GET /midias": {};
  /** @description Relatório de ticket médio de um determinado período */
  "GET /dashboard/ticketMedio": {};
  /** @description Objeto com as cotações de frete */
  "GET /fretes/pedidos/:pedidoId/cotacoes": {};
}
